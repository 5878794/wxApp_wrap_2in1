!function(t){function F(n){if(Q[n])return Q[n].exports;var B=Q[n]={i:n,l:!1,exports:{}};return t[n].call(B.exports,B,B.exports,F),B.l=!0,B.exports}var Q={};F.m=t,F.c=Q,F.i=function(t){return t},F.d=function(t,Q,n){F.o(t,Q)||Object.defineProperty(t,Q,{configurable:!1,enumerable:!0,get:n})},F.n=function(t){var Q=t&&t.__esModule?function(){return t.default}:function(){return t};return F.d(Q,"a",Q),Q},F.o=function(t,F){return Object.prototype.hasOwnProperty.call(t,F)},F.p="",F(F.s=3)}([function(module,exports,__webpack_require__){"use strict";eval("\n\n//兼容es7\nvar regeneratorRuntime = __webpack_require__(7);\n\nvar backObj = {};\n\nif (false) {\n\tbackObj = require('./page_wx');\n} else {\n\tbackObj = __webpack_require__(2);\n}\n\nmodule.exports = backObj;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXM2L2FsbC9wYWdlLmVzNj8yNGI2Il0sIm5hbWVzIjpbInJlZ2VuZXJhdG9yUnVudGltZSIsInJlcXVpcmUiLCJiYWNrT2JqIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQUlBLHFCQUFxQixtQkFBQUMsQ0FBUSxDQUFSLENBQXpCOztBQUtBLElBQUlDLFVBQVUsRUFBZDs7QUFHQSxJQUFHLEtBQUgsRUFBVztBQUNWQSxXQUFVRCxRQUFRLFdBQVIsQ0FBVjtBQUNBLENBRkQsTUFFSztBQUNKQyxXQUFVLG1CQUFBRCxDQUFRLENBQVIsQ0FBVjtBQUNBOztBQUdERSxPQUFPQyxPQUFQLEdBQWlCRixPQUFqQiIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/lhbzlrrllczdcbmxldCByZWdlbmVyYXRvclJ1bnRpbWUgPSByZXF1aXJlKCdyZWdlbmVyYXRvci1ydW50aW1lJyk7XG5cblxuXG5cbmxldCBiYWNrT2JqID0ge307XG5cblxuaWYoaXNXeEFwcCl7XG5cdGJhY2tPYmogPSByZXF1aXJlKCcuL3BhZ2Vfd3gnKTtcbn1lbHNle1xuXHRiYWNrT2JqID0gcmVxdWlyZSgnLi9wYWdlX3dyYXAnKTtcbn1cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhY2tPYmo7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2VzNi9hbGwvcGFnZS5lczYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//wx小程序的数据绑定  {{至少有一个变量的运算,暂不支持全常量计算}}\n//实现\n//wx:for\n//wx:for-item\n//wx:for-index\n\n\n//事件实现\n//bindtap\n//bindtouchstart\n//bindtouchmove\n//bindtouchend\n//bindinput\n\n\n//方法实现\n// this.setData({a:1});\n// this.data.a\n\n\n//控件\n//input\n//textarea\n\n\n// 未实现\n//for循环不能使用静态数组 eg:wx:for='{{[1,2,3]}}'\n\n\n__webpack_require__(5);\nvar device = __webpack_require__(4);\n\nvar resolveDom = Symbol(),\n    getGlobalVar = Symbol(),\n    getChildWxFor = Symbol(),\n    resolveChild = Symbol(),\n    getCompiledValue = Symbol(),\n    handlerNodeText = Symbol(),\n    handlerNodeAttr = Symbol(),\n    handlerNodeWxFor = Symbol(),\n    getCompiledList = Symbol(),\n    getArrayData = Symbol(),\n    createListDom = Symbol(),\n    getCompiledForValue = Symbol(),\n    setForListNode = Symbol(),\n    checkEventBind = Symbol(),\n    eventListNames = Symbol(),\n    inputEventListener = Symbol(),\n    checkboxChangeEventListener = Symbol();\n\nvar dataBind = function () {\n\tfunction dataBind(opt) {\n\t\t_classCallCheck(this, dataBind);\n\n\t\tthis.data = opt.data || {}; //需要绑定的数据\n\t\tthis.node = opt.dom || document.body; //domObj  原生dom对象\n\t\tthis.runObj = opt.runObj || this;\n\n\t\tthis[eventListNames] = {\n\t\t\tbindtap: 'click',\n\t\t\tbindtouchstart: device.START_EV,\n\t\t\tbindtouchmove: device.MOVE_EV,\n\t\t\tbindtouchend: device.END_EV,\n\t\t\tbindinput: 'input',\n\t\t\tbindchange: 'change'\n\t\t};\n\n\t\tthis.bindTree = {};\n\t\tthis.forBindTree = new Map();\n\t\tthis.eventList = [];\n\n\t\tthis[resolveDom](this.node);\n\t\tthis.refreshAll();\n\t}\n\n\t//提取字符串中的变量\n\t//param:\n\t//  @text:string\n\t//  @exclude:obj\n\t//  @exclude:obj\n\t//return:array\n\n\n\t_createClass(dataBind, [{\n\t\tkey: getGlobalVar,\n\t\tvalue: function value(text) {\n\t\t\tvar exclude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\tvar vars = text.replace(/\\{\\{(.*?)\\}\\}/ig, ',$1,').match(/\\.?[a-zA-Z_][a-zA-Z0-9_]*/g) || [],\n\n\t\t\t// vars = text.match(/(?<=\\{\\{[\\s\\+\\-\\*\\/\\%a-zA-Z0-9_\\(\\)\\?\\:]*)[a-zA-Z0-9_]+/ig) || [],\n\t\t\tbackVars = [];\n\t\t\tvars.filter(function (r) {\n\t\t\t\tif (r.substr(0, 1) != '.') {\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t});\n\t\t\tvars.delReplace();\n\n\t\t\tvars.map(function (rs) {\n\t\t\t\tif (!exclude.hasOwnProperty(rs)) {\n\t\t\t\t\tbackVars.push(rs);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn backVars;\n\t\t}\n\n\t\t//获取wx:for下面的wx:for的变量\n\n\t}, {\n\t\tkey: getChildWxFor,\n\t\tvalue: function value(dom) {\n\t\t\tvar forData = dom.getAttribute('wx:for'),\n\t\t\t    forIndex = dom.getAttribute('wx:for-index'),\n\t\t\t    forItem = dom.getAttribute('wx:for-item'),\n\t\t\t    exclude = {},\n\t\t\t    _this = this,\n\t\t\t    wxFor = {};\n\n\t\t\texclude[forData] = true;\n\t\t\texclude[forIndex] = true;\n\t\t\texclude[forItem] = true;\n\n\t\t\tvar search = function search(dom, exclude) {\n\t\t\t\tif (dom.nodeType != 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\texclude = JSON.parse(JSON.stringify(exclude));\n\t\t\t\tif (dom.hasAttribute('wx:for')) {\n\t\t\t\t\tvar _forData = dom.getAttribute('wx:for'),\n\t\t\t\t\t    _forIndex = dom.getAttribute('wx:for-index'),\n\t\t\t\t\t    _forItem = dom.getAttribute('wx:for-item');\n\n\t\t\t\t\tvar _var = _this[getGlobalVar](_forData, exclude);\n\t\t\t\t\t_var.map(function (rs) {\n\t\t\t\t\t\twxFor[rs] = true;\n\t\t\t\t\t\texclude[rs] = true;\n\t\t\t\t\t});\n\t\t\t\t\texclude[_forIndex] = true;\n\t\t\t\t\texclude[_forItem] = true;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, l = dom.childNodes.length; i < l; i++) {\n\t\t\t\t\tsearch(dom.childNodes[i], exclude);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (var i = 0, l = dom.childNodes.length; i < l; i++) {\n\t\t\t\tsearch(dom.childNodes[i], exclude);\n\t\t\t}\n\n\t\t\treturn Object.keys(wxFor);\n\t\t}\n\n\t\t//解析dom\n\t\t//查找 wx:属性 的dom,忽略其下含有 {{}}的部分\n\t\t//查找非wx:属性的dom,查找所有含有 {{}}的部分\n\t\t//param:\n\t\t//  @dom:dom\n\n\t}, {\n\t\tkey: resolveDom,\n\t\tvalue: function value(dom) {\n\t\t\tvar type = dom.nodeType;\n\n\t\t\tif (type == 1) {\n\t\t\t\tvar hasWxFor = dom.getAttribute('wx:for') ? true : false;\n\t\t\t\tif (hasWxFor) {\n\t\t\t\t\t//如果是wx:for 不向下解析\n\t\t\t\t\tvar childWxFor = this[getChildWxFor](dom);\n\t\t\t\t\tthis[handlerNodeWxFor](dom, childWxFor);\n\t\t\t\t} else {\n\t\t\t\t\t//非wx:for的元素\n\t\t\t\t\tthis[handlerNodeAttr](dom);\n\t\t\t\t\t//搜索子集\n\t\t\t\t\tthis[resolveChild](dom);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type == 3) {\n\t\t\t\tthis[handlerNodeText](dom);\n\t\t\t\tthis[resolveChild](dom);\n\t\t\t}\n\t\t}\n\t\t//继续查找\n\n\t}, {\n\t\tkey: resolveChild,\n\t\tvalue: function value(dom) {\n\t\t\tvar l = dom.childNodes.length || 0;\n\n\t\t\tfor (var i = 0; i < l; i++) {\n\t\t\t\tthis[resolveDom](dom.childNodes[i]);\n\t\t\t}\n\t\t}\n\n\t\t//处理node=3的值 生成处理函数\n\n\t}, {\n\t\tkey: handlerNodeText,\n\t\tvalue: function value(dom) {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar childData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\t\tvar val = dom.nodeValue,\n\t\t\t    _thisVar = this[getGlobalVar](val),\n\t\t\t    _this = this;\n\n\t\t\t_thisVar.map(function (rs) {\n\t\t\t\tif (!_this2.bindTree[rs]) {\n\t\t\t\t\t_this2.bindTree[rs] = [];\n\t\t\t\t}\n\n\t\t\t\t_this2.bindTree[rs].push(function () {\n\t\t\t\t\tdom.nodeValue = _this[getCompiledValue](val);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t//处理node=1的attr (不含wx:for属性的)\n\n\t}, {\n\t\tkey: handlerNodeAttr,\n\t\tvalue: function value(dom) {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar attr = dom.attributes,\n\t\t\t    _this = this;\n\n\t\t\tvar _loop = function _loop(i, l) {\n\t\t\t\tvar attrName = attr[i].nodeName,\n\t\t\t\t    attrValue = attr[i].nodeValue;\n\n\t\t\t\t_this3[checkEventBind](dom, attrName, attrValue, _this3.eventList);\n\n\t\t\t\t//获取值中的{{}}的变量\n\t\t\t\tvar _thisVar = _this3[getGlobalVar](attrValue);\n\n\t\t\t\t//变量生成函数\n\t\t\t\t_thisVar.map(function (rs) {\n\t\t\t\t\tif (!_this3.bindTree[rs]) {\n\t\t\t\t\t\t_this3.bindTree[rs] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\t_this3.bindTree[rs].push(function () {\n\t\t\t\t\t\tvar val = _this[getCompiledValue](attrValue);\n\t\t\t\t\t\tdom.setAttribute(attrName, val);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tfor (var i = 0, l = attr.length; i < l; i++) {\n\t\t\t\t_loop(i, l);\n\t\t\t}\n\t\t}\n\t\t//处理node=1的 含wx:for的元素\n\n\t}, {\n\t\tkey: handlerNodeWxFor,\n\t\tvalue: function value(dom, childWxFor) {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar forData = dom.getAttribute('wx:for'),\n\t\t\t    _this = this;\n\n\t\t\t//设置该wx:for的dom的子元素对象存储地方\n\t\t\tif (!this.forBindTree.get(dom)) {\n\t\t\t\tthis.forBindTree.set(dom, {\n\t\t\t\t\tchildren: [],\n\t\t\t\t\tglobalParam: {},\n\t\t\t\t\teventList: []\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar _thisVar = this[getGlobalVar](forData);\n\t\t\t_thisVar.pushArray(childWxFor);\n\t\t\t_thisVar.map(function (rs) {\n\t\t\t\tif (!_this4.bindTree[rs]) {\n\t\t\t\t\t_this4.bindTree[rs] = [];\n\t\t\t\t}\n\n\t\t\t\t_this4.bindTree[rs].push(function () {\n\t\t\t\t\t//清除之前的片段\n\t\t\t\t\tvar catchData = _this.forBindTree.get(dom);\n\t\t\t\t\t//清除事件\n\t\t\t\t\tcatchData.eventList.map(function (rs) {\n\t\t\t\t\t\trs();\n\t\t\t\t\t});\n\t\t\t\t\t//清除dom\n\t\t\t\t\tcatchData.children.map(function (rs) {\n\t\t\t\t\t\trs.parentElement.removeChild(rs);\n\t\t\t\t\t});\n\t\t\t\t\tcatchData.children = [];\n\t\t\t\t\tcatchData.globalParam = {};\n\t\t\t\t\tcatchData.eventList = [];\n\n\t\t\t\t\t//获取新的片段\n\t\t\t\t\tvar fragment = _this[getCompiledList](dom, catchData.globalParam, catchData.eventList);\n\t\t\t\t\t//缓存 添加的片段元素\n\t\t\t\t\tfor (var i = 0, l = fragment.children.length; i < l; i++) {\n\t\t\t\t\t\tcatchData.children.push(fragment.children[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t//存储到map对象\n\t\t\t\t\t_this.forBindTree.set(dom, catchData);\n\n\t\t\t\t\t//插入片段\n\t\t\t\t\tdom.parentElement.insertBefore(fragment, dom);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t//获取dom的display属性 写入data-display中\n\t\t\tvar display = getComputedStyle(dom, null).getPropertyValue('display');\n\t\t\tdom.dataset.display = display;\n\t\t\tdom.style.display = 'none';\n\t\t}\n\n\t\t//计算最终的值\n\n\t}, {\n\t\tkey: getCompiledValue,\n\t\tvalue: function value(text) {\n\t\t\tvar data = this.data;\n\t\t\tvar textArray = text.replace(/\\{\\{(.*?)\\}\\}/ig, ',$1,').split(',');\n\t\t\tvar newText = '';\n\n\t\t\tif (textArray.length == 1) {\n\t\t\t\treturn text;\n\t\t\t}\n\n\t\t\ttextArray.map(function (rs, i) {\n\t\t\t\tif (i % 2 == 1) {\n\t\t\t\t\t//js 不支持 <?!\n\t\t\t\t\t// rs = rs.replace(/((?<!\\.[a-zA-Z_0-9_]*)[a-zA-Z0-9_\\\"]+)/ig,'data.$1');\n\t\t\t\t\trs = rs.replace(/\\.?[a-zA-Z_][a-zA-Z0-9_\\\"]*/ig, function (key) {\n\t\t\t\t\t\tif (key.substr(0, 1) == '.') {\n\t\t\t\t\t\t\treturn key;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'data.' + key;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tvar str = eval('(' + rs + ')');\n\t\t\t\t\tnewText += str ? str : '';\n\t\t\t\t} else {\n\t\t\t\t\tnewText += rs;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn newText;\n\t\t}\n\t\t//获取wx:for的实际数组\n\n\t}, {\n\t\tkey: getArrayData,\n\t\tvalue: function value(text, listData) {\n\t\t\tvar data = this.data;\n\t\t\tvar textArray = text.replace(/\\{\\{(.*?)\\}\\}/ig, ',$1,').split(',');\n\n\t\t\tif (textArray.length == 1) {\n\t\t\t\treturn text;\n\t\t\t}\n\n\t\t\ttextArray = textArray[1];\n\t\t\t//js  不支持 <?!\n\t\t\t// textArray = textArray.replace(/((?<!\\.[a-zA-Z_0-9_]*)[a-zA-Z0-9_\\\"]+)/ig,function(key){\n\t\t\t// \treturn (listData.hasOwnProperty(key))? 'listData.'+key : 'data.'+key;\n\t\t\t// });\n\t\t\ttextArray = textArray.replace(/\\.?[a-zA-Z_][a-zA-Z0-9_\\\"]*/ig, function (key) {\n\t\t\t\tif (key.substr(0, 1) == '.') {\n\t\t\t\t\treturn key;\n\t\t\t\t} else {\n\t\t\t\t\treturn listData.hasOwnProperty(key) ? 'listData.' + key : 'data.' + key;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn eval('(' + textArray + ')');\n\t\t}\n\t\t//计算wx:for中的变量值\n\n\t}, {\n\t\tkey: getCompiledForValue,\n\t\tvalue: function value(text, listData) {\n\t\t\tvar data = this.data;\n\t\t\tvar textArray = text.replace(/\\{\\{(.*?)\\}\\}/ig, ',$1,').split(',');\n\t\t\tvar newText = '';\n\n\t\t\tif (textArray.length == 1) {\n\t\t\t\treturn text;\n\t\t\t}\n\n\t\t\ttextArray.map(function (rs, i) {\n\t\t\t\tif (i % 2 == 1) {\n\t\t\t\t\t//js 不支持 ?<!\n\t\t\t\t\t// rs = rs.replace(/((?<!\\.[a-zA-Z_0-9_]*)[a-zA-Z0-9_\\\"]+)/ig,function(key){\n\t\t\t\t\t// \treturn (listData.hasOwnProperty(key))? 'listData.'+key : 'data.'+key;\n\t\t\t\t\t// });\n\t\t\t\t\trs = rs.replace(/\\.?[a-zA-Z_][a-zA-Z0-9_\\\"]*/ig, function (key) {\n\t\t\t\t\t\tif (key.substr(0, 1) == '.') {\n\t\t\t\t\t\t\treturn t;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn listData.hasOwnProperty(key) ? 'listData.' + key : 'data.' + key;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tnewText += eval('(' + rs + ')');\n\t\t\t\t} else {\n\t\t\t\t\tnewText += rs;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn newText;\n\t\t}\n\n\t\t//计算列表node\n\n\t}, {\n\t\tkey: getCompiledList,\n\t\tvalue: function value(dom, globalParam, eventList) {\n\t\t\tvar fragment = document.createDocumentFragment();\n\t\t\tvar listData = {};\n\t\t\tvar cloneDom = dom.cloneNode(true);\n\t\t\tvar display = cloneDom.dataset.display;\n\t\t\tcloneDom.dataset.display = '';\n\t\t\tcloneDom.style.display = display;\n\n\t\t\tthis[createListDom](fragment, cloneDom, listData, globalParam, eventList);\n\n\t\t\treturn fragment;\n\t\t}\n\n\t\t//生成列表dom并赋值\n\n\t}, {\n\t\tkey: createListDom,\n\t\tvalue: function value(parentDom, dom, listData, globalParam, eventList) {\n\t\t\tvar _this5 = this;\n\n\t\t\tvar nowListData = JSON.parse(JSON.stringify(listData));\n\t\t\t//判断是否含有wx:for\n\t\t\tif (dom.nodeType == 1 && dom.getAttribute('wx:for')) {\n\t\t\t\tvar forData = dom.getAttribute('wx:for'),\n\t\t\t\t    forIndex = dom.getAttribute('wx:for-index') || 'index',\n\t\t\t\t    forItem = dom.getAttribute('wx:for-item') || 'item';\n\t\t\t\tforData = this[getArrayData](forData, listData);\n\n\t\t\t\tdom.removeAttribute('wx:for');\n\t\t\t\tdom.removeAttribute('wx:for-index');\n\t\t\t\tdom.removeAttribute('wx:for-item');\n\n\t\t\t\tforData.map(function (rs, i) {\n\t\t\t\t\tnowListData[forIndex] = i;\n\t\t\t\t\tnowListData[forItem] = rs;\n\n\t\t\t\t\tvar this_dom = dom.cloneNode();\n\t\t\t\t\t//设置该dom克隆后的属性\n\t\t\t\t\t_this5[setForListNode](this_dom, nowListData, globalParam, eventList);\n\n\t\t\t\t\tparentDom.appendChild(this_dom);\n\n\t\t\t\t\tif (dom.childNodes.length != 0) {\n\t\t\t\t\t\tfor (var _i = 0, l = dom.childNodes.length; _i < l; _i++) {\n\t\t\t\t\t\t\t_this5[createListDom](this_dom, dom.childNodes[_i].cloneNode(true), nowListData, globalParam, eventList);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// 普通的\n\t\t\t\tvar this_dom = dom.cloneNode();\n\t\t\t\t//设置该dom克隆后的属性\n\t\t\t\tthis[setForListNode](this_dom, nowListData, globalParam, eventList);\n\n\t\t\t\tparentDom.appendChild(this_dom);\n\n\t\t\t\tif (dom.childNodes.length != 0) {\n\t\t\t\t\tfor (var i = 0, l = dom.childNodes.length; i < l; i++) {\n\t\t\t\t\t\tthis[createListDom](this_dom, dom.childNodes[i], nowListData, globalParam, eventList);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//生成列表中的值\n\n\t}, {\n\t\tkey: setForListNode,\n\t\tvalue: function value(this_dom, nowListData, globalParam, eventList) {\n\t\t\tvar _this6 = this;\n\n\t\t\tvar _this = this;\n\n\t\t\tif (this_dom.nodeType == 1) {\n\t\t\t\t//计算属性\n\t\t\t\tvar attr = this_dom.attributes;\n\n\t\t\t\tvar _loop2 = function _loop2(i, l) {\n\t\t\t\t\tvar attrName = attr[i].nodeName,\n\t\t\t\t\t    attrValue = attr[i].nodeValue;\n\n\t\t\t\t\t_this6[checkEventBind](this_dom, attrName, attrValue, eventList);\n\n\t\t\t\t\tvar val = _this6[getCompiledForValue](attrValue, nowListData);\n\t\t\t\t\tthis_dom.setAttribute(attrName, val);\n\n\t\t\t\t\tvar _var = _this6[getGlobalVar](attrValue, nowListData);\n\t\t\t\t\t_var.map(function (rs) {\n\t\t\t\t\t\tif (!globalParam[rs]) {\n\t\t\t\t\t\t\tglobalParam[rs] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tglobalParam[rs].push(function () {\n\t\t\t\t\t\t\tvar val = _this[getCompiledForValue](attrValue, nowListData);\n\t\t\t\t\t\t\tthis_dom.setAttribute(attrName, val);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tfor (var i = 0, l = attr.length; i < l; i++) {\n\t\t\t\t\t_loop2(i, l);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this_dom.nodeType == 3) {\n\t\t\t\t//计算text的值\n\t\t\t\tvar val = this_dom.nodeValue;\n\t\t\t\tthis_dom.nodeValue = this[getCompiledForValue](val, nowListData);\n\n\t\t\t\tvar _var = this[getGlobalVar](val, nowListData);\n\t\t\t\t_var.map(function (rs) {\n\t\t\t\t\tif (!globalParam[rs]) {\n\t\t\t\t\t\tglobalParam[rs] = [];\n\t\t\t\t\t}\n\t\t\t\t\tglobalParam[rs].push(function () {\n\t\t\t\t\t\tthis_dom.nodeValue = _this[getCompiledForValue](val, nowListData);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t//执行所有的数据更新\n\n\t}, {\n\t\tkey: 'refreshAll',\n\t\tvalue: function refreshAll() {\n\t\t\tObject.values(this.bindTree).map(function (rs) {\n\t\t\t\trs.map(function (r) {\n\t\t\t\t\tr();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t[].concat(_toConsumableArray(this.forBindTree.values())).map(function (rs) {\n\t\t\t\tObject.values(rs.globalParam).map(function (rr) {\n\t\t\t\t\trr.map(function (r) {\n\t\t\t\t\t\tr();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t//跟新指定的变量\n\n\t}, {\n\t\tkey: 'refreshParam',\n\t\tvalue: function refreshParam(key) {\n\t\t\t//跟新非for下面的\n\t\t\tif (this.bindTree.hasOwnProperty(key)) {\n\t\t\t\tthis.bindTree[key].map(function (rs) {\n\t\t\t\t\trs();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//跟新for里面的\n\t\t\t[].concat(_toConsumableArray(this.forBindTree.values())).map(function (rs) {\n\t\t\t\tif (rs.globalParam.hasOwnProperty(key)) {\n\t\t\t\t\trs.globalParam[key].map(function (rr) {\n\t\t\t\t\t\trr();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t//设置参数\n\n\t}, {\n\t\tkey: 'setData',\n\t\tvalue: function setData() {\n\t\t\tvar obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = Object.entries(obj)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar _ref = _step.value;\n\n\t\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\n\t\t\t\t\tvar key = _ref2[0];\n\t\t\t\t\tvar val = _ref2[1];\n\n\t\t\t\t\tthis.data[key] = val;\n\t\t\t\t\tthis.refreshParam(key);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//检查是否有事件绑定\n\n\t}, {\n\t\tkey: checkEventBind,\n\t\tvalue: function value(dom, attrName, attrValue, eventList) {\n\t\t\t//判断是否是设置的事件名\n\t\t\tif (!this[eventListNames].hasOwnProperty(attrName)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar eventName = this[eventListNames][attrName],\n\t\t\t    tagName = dom.tagName.toLowerCase();\n\n\t\t\t//处理input、textarea的事件绑定\n\t\t\tif (eventName == 'input') {\n\t\t\t\tthis[inputEventListener](dom, eventName, attrValue, eventList);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (tagName == 'checkbox-group' && eventName == 'change') {\n\t\t\t\tthis[checkboxChangeEventListener](dom, eventName, attrValue, eventList);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: inputEventListener,\n\t\tvalue: function value(dom, eventName, attrValue, eventList) {\n\t\t\tvar _this = this.runObj,\n\t\t\t    fn = null,\n\t\t\t    newE = {};\n\n\t\t\tdom.addEventListener(eventName, fn = function fn(e) {\n\t\t\t\t//将事件的返回改为微信的返回\n\t\t\t\t//只返回了常用的\n\t\t\t\tnewE.detail = {\n\t\t\t\t\tvalue: e.currentTarget.value\n\t\t\t\t};\n\t\t\t\tnewE.currentTarget = {\n\t\t\t\t\tid: e.currentTarget.id,\n\t\t\t\t\tdataset: e.currentTarget.dataset\n\t\t\t\t};\n\t\t\t\tnewE.type = eventName;\n\n\t\t\t\t//执行绑定的函数\n\t\t\t\tif (_this.hasOwnProperty(attrValue)) {\n\t\t\t\t\t_this[attrValue].call(_this, newE);\n\t\t\t\t}\n\t\t\t}, false);\n\n\t\t\t//根据全局和for中的变量 分别缓存注销事件\n\t\t\t//缓存对象是传入的\n\t\t\teventList.push(function () {\n\t\t\t\tdom.removeEventListener(eventName, fn, false);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: checkboxChangeEventListener,\n\t\tvalue: function value(dom, eventName, attrValue, eventList) {\n\t\t\tvar _this = this.runObj,\n\t\t\t    checkbox = dom.getElementsByTagName('input'),\n\t\t\t    checkboxs = [];\n\n\t\t\t//获取所有的checkbox\n\t\t\tfor (var i = 0, l = checkbox.length; i < l; i++) {\n\t\t\t\tvar input = checkbox[i];\n\t\t\t\tif (input.getAttribute('type') == 'checkbox') {\n\t\t\t\t\tcheckboxs.push(input);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar getVal = function getVal() {\n\t\t\t\tvar val = [];\n\t\t\t\tcheckboxs.map(function (rs) {\n\t\t\t\t\tif (rs.checked) {\n\t\t\t\t\t\tval.push(rs.value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn val;\n\t\t\t};\n\n\t\t\t//事件绑定\n\t\t\tcheckboxs.map(function (rs) {\n\t\t\t\tvar fn = null,\n\t\t\t\t    newE = {};\n\t\t\t\trs.addEventListener(eventName, fn = function fn(e) {\n\t\t\t\t\t//将事件的返回改为微信的返回\n\t\t\t\t\t//只返回了常用的\n\t\t\t\t\tnewE.detail = {\n\t\t\t\t\t\tvalue: getVal()\n\t\t\t\t\t};\n\t\t\t\t\tnewE.currentTarget = {\n\t\t\t\t\t\tid: e.currentTarget.id,\n\t\t\t\t\t\tdataset: e.currentTarget.dataset\n\t\t\t\t\t};\n\t\t\t\t\tnewE.type = eventName;\n\n\t\t\t\t\t//执行绑定的函数\n\t\t\t\t\tif (_this.hasOwnProperty(attrValue)) {\n\t\t\t\t\t\t_this[attrValue].call(_this, newE);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\t//根据全局和for中的变量 分别缓存注销事件\n\t\t\t\t//缓存对象是传入的\n\t\t\t\teventList.push(function () {\n\t\t\t\t\trs.removeEventListener(eventName, fn, false);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn dataBind;\n}();\n\nmodule.exports = dataBind;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\n//页面ready事件\nvar isReady = false,\n    cacheFns = [];\n\n$(document).ready(function () {\n\tisReady = true;\n\tcacheFns.map(function (fn) {\n\t\tfn();\n\t});\n});\n\n//页面适配\nvar viewPort = __webpack_require__(6),\n    dataEventBind = __webpack_require__(1);\nviewPort(640);\n\nvar bindFnIsRun = false;\nvar bindFn = function bindFn(obj) {\n\tvar aa = new dataEventBind({\n\t\tdata: obj.data,\n\t\trunObj: obj\n\t});\n\n\tobj.setData = function (dd) {\n\t\taa.setData(dd);\n\t};\n};\n\nmodule.exports = {\n\trun: function run(obj) {\n\t\tif (isReady) {\n\n\t\t\tif (!bindFnIsRun) {\n\t\t\t\tbindFnIsRun = true;\n\t\t\t\tbindFn(obj);\n\t\t\t}\n\n\t\t\tobj.init();\n\t\t} else {\n\t\t\tcacheFns.push(function () {\n\n\t\t\t\tif (!bindFnIsRun) {\n\t\t\t\t\tbindFnIsRun = true;\n\t\t\t\t\tbindFn(obj);\n\t\t\t\t}\n\n\t\t\t\tobj.init();\n\t\t\t});\n\t\t}\n\t}\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXM2L2FsbC9wYWdlX3dyYXAuZXM2PzA2NGIiXSwibmFtZXMiOlsiaXNSZWFkeSIsImNhY2hlRm5zIiwiJCIsImRvY3VtZW50IiwicmVhZHkiLCJtYXAiLCJmbiIsInZpZXdQb3J0IiwicmVxdWlyZSIsImRhdGFFdmVudEJpbmQiLCJiaW5kRm5Jc1J1biIsImJpbmRGbiIsIm9iaiIsImFhIiwiZGF0YSIsInJ1bk9iaiIsInNldERhdGEiLCJkZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJydW4iLCJpbml0IiwicHVzaCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLElBQUlBLFVBQVUsS0FBZDtBQUFBLElBQ0NDLFdBQVcsRUFEWjs7QUFJQUMsRUFBRUMsUUFBRixFQUFZQyxLQUFaLENBQWtCLFlBQVU7QUFDM0JKLFdBQVUsSUFBVjtBQUNBQyxVQUFTSSxHQUFULENBQWEsY0FBSTtBQUNoQkM7QUFDQSxFQUZEO0FBR0EsQ0FMRDs7QUFRQTtBQUNBLElBQUlDLFdBQVcsbUJBQUFDLENBQVEsQ0FBUixDQUFmO0FBQUEsSUFDQ0MsZ0JBQWdCLG1CQUFBRCxDQUFRLENBQVIsQ0FEakI7QUFFQUQsU0FBUyxHQUFUOztBQUdBLElBQUlHLGNBQWMsS0FBbEI7QUFDQSxJQUFJQyxTQUFTLFNBQVRBLE1BQVMsQ0FBU0MsR0FBVCxFQUFhO0FBQ3pCLEtBQUlDLEtBQUssSUFBSUosYUFBSixDQUFrQjtBQUMxQkssUUFBS0YsSUFBSUUsSUFEaUI7QUFFMUJDLFVBQU9IO0FBRm1CLEVBQWxCLENBQVQ7O0FBS0FBLEtBQUlJLE9BQUosR0FBYyxVQUFTQyxFQUFULEVBQVk7QUFDekJKLEtBQUdHLE9BQUgsQ0FBV0MsRUFBWDtBQUNBLEVBRkQ7QUFHQSxDQVREOztBQVlBQyxPQUFPQyxPQUFQLEdBQWlCO0FBQ2hCQyxJQURnQixlQUNaUixHQURZLEVBQ1I7QUFDUCxNQUFHWixPQUFILEVBQVc7O0FBRVYsT0FBRyxDQUFDVSxXQUFKLEVBQWdCO0FBQ2ZBLGtCQUFjLElBQWQ7QUFDQUMsV0FBT0MsR0FBUDtBQUNBOztBQUVEQSxPQUFJUyxJQUFKO0FBQ0EsR0FSRCxNQVFLO0FBQ0pwQixZQUFTcUIsSUFBVCxDQUFjLFlBQVU7O0FBRXZCLFFBQUcsQ0FBQ1osV0FBSixFQUFnQjtBQUNmQSxtQkFBYyxJQUFkO0FBQ0FDLFlBQU9DLEdBQVA7QUFDQTs7QUFFREEsUUFBSVMsSUFBSjtBQUNBLElBUkQ7QUFTQTtBQUNEO0FBckJlLENBQWpCIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL+mhtemdonJlYWR55LqL5Lu2XG5sZXQgaXNSZWFkeSA9IGZhbHNlLFxuXHRjYWNoZUZucyA9IFtdO1xuXG5cbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7XG5cdGlzUmVhZHkgPSB0cnVlO1xuXHRjYWNoZUZucy5tYXAoZm49Pntcblx0XHRmbigpO1xuXHR9KVxufSk7XG5cblxuLy/pobXpnaLpgILphY1cbmxldCB2aWV3UG9ydCA9IHJlcXVpcmUoJy4uL2xpYi91aS9zZXRWaWV3cG9ydCcpLFxuXHRkYXRhRXZlbnRCaW5kID0gcmVxdWlyZSgnLi9kYXRhQmluZF93cmFwJyk7XG52aWV3UG9ydChwc2RXaWR0aCk7XG5cblxubGV0IGJpbmRGbklzUnVuID0gZmFsc2U7XG5sZXQgYmluZEZuID0gZnVuY3Rpb24ob2JqKXtcblx0bGV0IGFhID0gbmV3IGRhdGFFdmVudEJpbmQoe1xuXHRcdGRhdGE6b2JqLmRhdGEsXG5cdFx0cnVuT2JqOm9ialxuXHR9KTtcblxuXHRvYmouc2V0RGF0YSA9IGZ1bmN0aW9uKGRkKXtcblx0XHRhYS5zZXREYXRhKGRkKTtcblx0fTtcbn07XG5cblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cdHJ1bihvYmope1xuXHRcdGlmKGlzUmVhZHkpe1xuXG5cdFx0XHRpZighYmluZEZuSXNSdW4pe1xuXHRcdFx0XHRiaW5kRm5Jc1J1biA9IHRydWU7XG5cdFx0XHRcdGJpbmRGbihvYmopO1xuXHRcdFx0fVxuXG5cdFx0XHRvYmouaW5pdCgpO1xuXHRcdH1lbHNle1xuXHRcdFx0Y2FjaGVGbnMucHVzaChmdW5jdGlvbigpe1xuXG5cdFx0XHRcdGlmKCFiaW5kRm5Jc1J1bil7XG5cdFx0XHRcdFx0YmluZEZuSXNSdW4gPSB0cnVlO1xuXHRcdFx0XHRcdGJpbmRGbihvYmopO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0b2JqLmluaXQoKTtcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxufTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvZXM2L2FsbC9wYWdlX3dyYXAuZXM2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar app = __webpack_require__(0);\n\nvar page = {\n\tdata: {\n\t\taaa: 123,\n\t\ta: [],\n\t\tc: [4, 5, 6],\n\t\tdd: [1, 2],\n\t\tinput1: 3\n\t},\n\tinit: function init() {\n\t\tvar a = [];\n\t\tfor (var i = 0, l = 3; i < l; i++) {\n\t\t\ta.push(i);\n\t\t}\n\n\t\tthis.setData({ a: a });\n\t\tconsole.log(this.data.aaa);\n\t},\n\ttestFn: function testFn(e) {\n\t\t// console.log(e);\n\t\tconsole.log('touch ok');\n\t\tconsole.log(e.currentTarget);\n\t},\n\ttestTouch: function testTouch(e) {\n\t\t// console.log(e)\n\t\tconsole.log('touch start');\n\t\t// console.log(e.target)\n\t\tconsole.log(e.currentTarget);\n\t},\n\tmoveFn: function moveFn(e) {\n\t\tconsole.log('touch move');\n\t\tconsole.log(e.currentTarget);\n\t},\n\ttestEnd: function testEnd(e) {\n\t\tconsole.log('touch end');\n\t\tconsole.log(e.currentTarget);\n\t},\n\ttestLong: function testLong(e) {\n\t\tconsole.log('touch long');\n\t\tconsole.log(e);\n\t},\n\tinput1: function input1(e) {\n\t\tconsole.log(e);\n\t\tconsole.log('input:' + e.detail.value);\n\t\tconsole.log('dataset:' + e.currentTarget.dataset.t + '   ' + e.currentTarget.dataset.test);\n\t},\n\tcheckboxChange: function checkboxChange(e) {\n\t\tconsole.log(e.detail.value);\n\t}\n};\n\nif (window) {\n\twindow.page = page;\n}\n// window.page = page;\n\napp.run(page);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXM2L2luZGV4LmVzNj84MzhhIl0sIm5hbWVzIjpbImFwcCIsInJlcXVpcmUiLCJwYWdlIiwiZGF0YSIsImFhYSIsImEiLCJjIiwiZGQiLCJpbnB1dDEiLCJpbml0IiwiaSIsImwiLCJwdXNoIiwic2V0RGF0YSIsImNvbnNvbGUiLCJsb2ciLCJ0ZXN0Rm4iLCJlIiwiY3VycmVudFRhcmdldCIsInRlc3RUb3VjaCIsIm1vdmVGbiIsInRlc3RFbmQiLCJ0ZXN0TG9uZyIsImRldGFpbCIsInZhbHVlIiwiZGF0YXNldCIsInQiLCJ0ZXN0IiwiY2hlY2tib3hDaGFuZ2UiLCJ3aW5kb3ciLCJydW4iXSwibWFwcGluZ3MiOiI7O0FBRUEsSUFBSUEsTUFBTSxtQkFBQUMsQ0FBUSxDQUFSLENBQVY7O0FBS0EsSUFBSUMsT0FBTztBQUNWQyxPQUFLO0FBQ0pDLE9BQUksR0FEQTtBQUVKQyxLQUFFLEVBRkU7QUFHSkMsS0FBRSxDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssQ0FBTCxDQUhFO0FBSUpDLE1BQUcsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUpDO0FBS0pDLFVBQU87QUFMSCxFQURLO0FBUVZDLEtBUlUsa0JBUUo7QUFDTCxNQUFJSixJQUFJLEVBQVI7QUFDQSxPQUFJLElBQUlLLElBQUUsQ0FBTixFQUFRQyxJQUFFLENBQWQsRUFBZ0JELElBQUVDLENBQWxCLEVBQW9CRCxHQUFwQixFQUF3QjtBQUN2QkwsS0FBRU8sSUFBRixDQUFPRixDQUFQO0FBQ0E7O0FBRUQsT0FBS0csT0FBTCxDQUFhLEVBQUNSLEdBQUVBLENBQUgsRUFBYjtBQUNBUyxVQUFRQyxHQUFSLENBQVksS0FBS1osSUFBTCxDQUFVQyxHQUF0QjtBQUdBLEVBbEJTO0FBbUJWWSxPQW5CVSxrQkFtQkhDLENBbkJHLEVBbUJEO0FBQ1I7QUFDQUgsVUFBUUMsR0FBUixDQUFZLFVBQVo7QUFDQUQsVUFBUUMsR0FBUixDQUFZRSxFQUFFQyxhQUFkO0FBQ0EsRUF2QlM7QUF3QlZDLFVBeEJVLHFCQXdCQUYsQ0F4QkEsRUF3QkU7QUFDWDtBQUNBSCxVQUFRQyxHQUFSLENBQVksYUFBWjtBQUNBO0FBQ0FELFVBQVFDLEdBQVIsQ0FBWUUsRUFBRUMsYUFBZDtBQUNBLEVBN0JTO0FBOEJWRSxPQTlCVSxrQkE4QkhILENBOUJHLEVBOEJEO0FBQ1JILFVBQVFDLEdBQVIsQ0FBWSxZQUFaO0FBQ0FELFVBQVFDLEdBQVIsQ0FBWUUsRUFBRUMsYUFBZDtBQUNBLEVBakNTO0FBa0NWRyxRQWxDVSxtQkFrQ0ZKLENBbENFLEVBa0NBO0FBQ1RILFVBQVFDLEdBQVIsQ0FBWSxXQUFaO0FBQ0FELFVBQVFDLEdBQVIsQ0FBWUUsRUFBRUMsYUFBZDtBQUNBLEVBckNTO0FBc0NWSSxTQXRDVSxvQkFzQ0RMLENBdENDLEVBc0NDO0FBQ1ZILFVBQVFDLEdBQVIsQ0FBWSxZQUFaO0FBQ0FELFVBQVFDLEdBQVIsQ0FBWUUsQ0FBWjtBQUNBLEVBekNTO0FBMENWVCxPQTFDVSxrQkEwQ0hTLENBMUNHLEVBMENEO0FBQ1JILFVBQVFDLEdBQVIsQ0FBWUUsQ0FBWjtBQUNBSCxVQUFRQyxHQUFSLENBQVksV0FBU0UsRUFBRU0sTUFBRixDQUFTQyxLQUE5QjtBQUNBVixVQUFRQyxHQUFSLENBQVksYUFBV0UsRUFBRUMsYUFBRixDQUFnQk8sT0FBaEIsQ0FBd0JDLENBQW5DLEdBQXFDLEtBQXJDLEdBQTJDVCxFQUFFQyxhQUFGLENBQWdCTyxPQUFoQixDQUF3QkUsSUFBL0U7QUFDQSxFQTlDUztBQStDVkMsZUEvQ1UsMEJBK0NLWCxDQS9DTCxFQStDTztBQUNoQkgsVUFBUUMsR0FBUixDQUFZRSxFQUFFTSxNQUFGLENBQVNDLEtBQXJCO0FBQ0E7QUFqRFMsQ0FBWDs7QUFvREEsSUFBR0ssTUFBSCxFQUFVO0FBQ1RBLFFBQU8zQixJQUFQLEdBQWNBLElBQWQ7QUFDQTtBQUNEOztBQUVBRixJQUFJOEIsR0FBSixDQUFRNUIsSUFBUiIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbmxldCBhcHAgPSByZXF1aXJlKCcuL2FsbC9wYWdlJyk7XG5cblxuXG5cbmxldCBwYWdlID0ge1xuXHRkYXRhOntcblx0XHRhYWE6MTIzLFxuXHRcdGE6W10sXG5cdFx0YzpbNCw1LDZdLFxuXHRcdGRkOlsxLDJdLFxuXHRcdGlucHV0MTozXG5cdH0sXG5cdGluaXQoKXtcblx0XHRsZXQgYSA9IFtdO1xuXHRcdGZvcihsZXQgaT0wLGw9MztpPGw7aSsrKXtcblx0XHRcdGEucHVzaChpKTtcblx0XHR9XG5cblx0XHR0aGlzLnNldERhdGEoe2E6YX0pO1xuXHRcdGNvbnNvbGUubG9nKHRoaXMuZGF0YS5hYWEpO1xuXG5cblx0fSxcblx0dGVzdEZuKGUpe1xuXHRcdC8vIGNvbnNvbGUubG9nKGUpO1xuXHRcdGNvbnNvbGUubG9nKCd0b3VjaCBvaycpO1xuXHRcdGNvbnNvbGUubG9nKGUuY3VycmVudFRhcmdldCk7XG5cdH0sXG5cdHRlc3RUb3VjaChlKXtcblx0XHQvLyBjb25zb2xlLmxvZyhlKVxuXHRcdGNvbnNvbGUubG9nKCd0b3VjaCBzdGFydCcpO1xuXHRcdC8vIGNvbnNvbGUubG9nKGUudGFyZ2V0KVxuXHRcdGNvbnNvbGUubG9nKGUuY3VycmVudFRhcmdldClcblx0fSxcblx0bW92ZUZuKGUpe1xuXHRcdGNvbnNvbGUubG9nKCd0b3VjaCBtb3ZlJyk7XG5cdFx0Y29uc29sZS5sb2coZS5jdXJyZW50VGFyZ2V0KTtcblx0fSxcblx0dGVzdEVuZChlKXtcblx0XHRjb25zb2xlLmxvZygndG91Y2ggZW5kJyk7XG5cdFx0Y29uc29sZS5sb2coZS5jdXJyZW50VGFyZ2V0KTtcblx0fSxcblx0dGVzdExvbmcoZSl7XG5cdFx0Y29uc29sZS5sb2coJ3RvdWNoIGxvbmcnKTtcblx0XHRjb25zb2xlLmxvZyhlKTtcblx0fSxcblx0aW5wdXQxKGUpe1xuXHRcdGNvbnNvbGUubG9nKGUpXG5cdFx0Y29uc29sZS5sb2coJ2lucHV0OicrZS5kZXRhaWwudmFsdWUpXG5cdFx0Y29uc29sZS5sb2coJ2RhdGFzZXQ6JytlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC50KycgICAnK2UuY3VycmVudFRhcmdldC5kYXRhc2V0LnRlc3QpXG5cdH0sXG5cdGNoZWNrYm94Q2hhbmdlKGUpe1xuXHRcdGNvbnNvbGUubG9nKGUuZGV0YWlsLnZhbHVlKTtcblx0fVxufTtcblxuaWYod2luZG93KXtcblx0d2luZG93LnBhZ2UgPSBwYWdlO1xufVxuLy8gd2luZG93LnBhZ2UgPSBwYWdlO1xuXG5hcHAucnVuKHBhZ2UpO1xuXG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9lczYvaW5kZXguZXM2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nwindow.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n\treturn setTimeout(callback, 1);\n};\n\nwindow.cancelAnimationFrame = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.webkitCancelRequestAnimationFrame ||\n// window.mozCancelRequestAnimationFrame ||\n// window.oCancelRequestAnimationFrame ||\n// window.msCancelRequestAnimationFrame ||\nclearTimeout;\n\n// window.navigator.getUserMedia =    window.navigator.getUserMedia ||\n// \t\t\t\t\t\t\t\t\twindow.navigator.webkitGetUserMedia ||\n// \t\t\t\t\t\t\t\t\twindow.navigator.mozGetUserMedia ||\n// \t\t\t\t\t\t\t\t\twindow.navigator.msGetUserMedia;\n\n// window.PeerConnection = window.PeerConnection ||\n// \t\t\t\t\t\twindow.webkitPeerConnection ||\n// \t\t\t\t\t\twindow.webkitRTCPeerConnection ||\n// \t\t\t\t\t\twindow.mozRTCPeerConnection;\n//\n// window.indexedDB = window.indexedDB ||\n// \t\t\t\t\twindow.mozIndexedDB ||\n// \t\t\t\t\twindow.webkitIndexedDB ||\n// \t\t\t\t\twindow.msIndexedDB;\n//\n//\n// window.IDBTransaction = window.IDBTransaction ||\n// \t\t\t\t\t\twindow.webkitIDBTransaction ||\n// \t\t\t\t\t\twindow.msIDBTransaction;\n//\n// window.IDBKeyRange = window.IDBKeyRange ||\n// \t\t\t\t\twindow.webkitIDBKeyRange ||\n// \t\t\t\t\twindow.msIDBKeyRange;\n//\n// window.AudioContext = window.AudioContext ||\n// \t\t\t\t\t\twindow.webkitAudioContext ||\n// \t\t\t\t\t\twindow.mozAudioContext ||\n// \t\t\t\t\t\twindow.msAudioContext;\n\n\nvar DEVICE = {};\n\n//*****************************************************\n//获取浏览器或设备名称  以及版本号\n//*****************************************************\n//输出结果:\n//---------------------------------------------------------\n//DEVICE.isIpad             @param:bloom    是否是：ipad\n//DEVICE.isIphone           @param:bloom    是否是：ipbone\n//DEVICE.isAndroid          @param:bloom    是否是：android\n//DEVICE.isIe               @param:bloom    是否是：ie\n//DEVICE.isFirefox          @param:bloom    是否是：firefox\n//DEVICE.isChrome           @param:bloom    是否是：chrome\n//DEVICE.isOpera            @param:bloom    是否是：opera\n//DEVICE.isSafari           @param:bloom    是否是：safari\n//DEVICE.isPc\t\t\t\t@param:bloom\t是否是：pc\n//DEVICE.isPhone\t\t\t@param:bloom\t是否是：移动设备，非pc\n\n//DEVICE.ver                @param:number   浏览器版本或  ipad/iphone/android系统版本\n//---------------------------------------------------------\n(function () {\n\tvar Sys = {};\n\tvar ua = navigator.userAgent.toLowerCase();\n\tvar s;\n\t(s = ua.match(/ipad; cpu os ([\\d_]+)/)) ? Sys.ipad = s[1].replace(/_/g, ".") : (s = ua.match(/iphone os ([\\d_]+)/)) ? Sys.iphone = s[1].replace(/_/g, ".") : (s = ua.match(/android[ \\/]([\\d.]+)/)) ? Sys.android = s[1] : (s = ua.match(/rv:([\\d.]+)\\) like gecko/)) ? Sys.ie = s[1] : (s = ua.match(/msie ([\\d.]+)/)) ? Sys.ie = s[1] : (s = ua.match(/firefox\\/([\\d.]+)/)) ? Sys.firefox = s[1] : (s = ua.match(/chrome\\/([\\d.]+)/)) ? Sys.chrome = s[1] : (s = ua.match(/opera.([\\d.]+)/)) ? Sys.opera = s[1] : (s = ua.match(/version\\/([\\d.]+).*safari/)) ? Sys.safari = s[1] : Sys._ = 0;\n\n\tDEVICE.isIpad = Sys.hasOwnProperty("ipad");\n\tDEVICE.isIphone = Sys.hasOwnProperty("iphone");\n\tDEVICE.isAndroid = Sys.hasOwnProperty("android");\n\tDEVICE.isIe = Sys.hasOwnProperty("ie");\n\tDEVICE.isFirefox = Sys.hasOwnProperty("firefox");\n\tDEVICE.isChrome = Sys.hasOwnProperty("chrome");\n\tDEVICE.isOpera = Sys.hasOwnProperty("opera");\n\tDEVICE.isSafari = Sys.hasOwnProperty("safari");\n\tDEVICE.isWeChat = ua.match(/MicroMessenger/i) == "micromessenger";\n\n\tDEVICE.ver = 0;\n\tvar ver;\n\tfor (var key in Sys) {\n\t\tif (Sys.hasOwnProperty(key)) {\n\t\t\tver = Sys[key];\n\t\t}\n\t}\n\tver = ver.split(".");\n\tvar _ver = [];\n\tfor (var i = 0, l = ver.length; i < l; i++) {\n\t\tif (i >= 2) {\n\t\t\tbreak;\n\t\t}\n\t\t_ver.push(ver[i]);\n\t}\n\t_ver = _ver.join(".");\n\tDEVICE.ver = _ver;\n\n\tDEVICE.isPhone = DEVICE.isAndroid || DEVICE.isIpad || DEVICE.isIphone;\n})();\n\n(function () {\n\tvar p = navigator.platform;\n\tvar win = p.indexOf("Win") == 0;\n\tvar mac = p.indexOf("Mac") == 0;\n\tvar x11 = p == "X11" || p.indexOf("Linux") == 0;\n\n\tDEVICE.isPc = win || mac || x11;\n\t// DEVICE.isPhone = !DEVICE.isPc;\n\tDEVICE.isMac = mac;\n\tDEVICE.isWin = win;\n\tDEVICE.isLinux = x11;\n})();\n\n//*****************************************************\n//处理浏览器css前缀问题 以及其它一些属性\n//*****************************************************\n//输出结果：\n//属性：------------------------------------------------\n//DEVICE.has3d              @param:bloom    是否支持3d\n//DEVICE.hasTouch           @param:bloom    是否是触摸屏\n//DEVICE.hasTransform       @param:bloom    是否支持变形\n//DEVICE.language           @param:str      语言版本  zh-cn\n\n//事件：------------------------------------------------\n//DEVICE.RESIZE_EV          @param:str      窗口变化\n//DEVICE.START_EV           @param:str      点击\n//DEVICE.MOVE_EV            @param:str      移动\n//DEVICE.END_EV             @param:str      释放\n//DEVICE.CANCEL_EV          @param:str      点击结束\n//DEVICE.TRNEND_EV          @param:str      变形结束 ｅｇ:webkitTransitionEnd\n\n//函数：------------------------------------------------\n//DEVICE.nextFrame          fn              执行动画函数　１秒６０帧\n//DEVICE.cancelFrame        fn              停止动画\n//DEVICE.counter            fn              计数器 返回页面全局唯一ｉｄ数字，从１开始。\n//DEVICE.fixObjCss          fn              ｊｑ调用，免ｃｓｓ前缀（部分）\n//DEVICE.fixCss             fn              免ｃｓｓ前缀（部分）\n//-----------------------------------------------------\n(function () {\n\tvar dummyStyle = document.createElement("div").style,\n\t    vendor = function () {\n\t\tif (window.navigator.msPointerEnabled) {\n\t\t\treturn "";\n\t\t}\n\t\tif ("MozTransform" in dummyStyle) {\n\t\t\treturn "";\n\t\t}\n\t\tvar vendors = \'webkitT,MozT,msT,OT,t\'.split(\',\'),\n\t\t    t,\n\t\t    i = 0,\n\t\t    l = vendors.length;\n\n\t\tfor (; i < l; i++) {\n\t\t\tt = vendors[i] + \'ransform\';\n\t\t\tif (t in dummyStyle) {\n\t\t\t\treturn vendors[i].substr(0, vendors[i].length - 1);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}(),\n\t    prefixStyle = function prefixStyle(style) {\n\t\tif (!vendor) return style;\n\n\t\tstyle = style.charAt(0).toUpperCase() + style.substr(1);\n\t\treturn vendor + style;\n\t},\n\t    has3d = prefixStyle(\'perspective\') in dummyStyle,\n\t    windowTouch = window.navigator.msMaxTouchPoints && window.navigator.msMaxTouchPoints > 0 ? true : false,\n\t    webkitTouch = DEVICE.isPhone,\n\t    hasTouch = webkitTouch || windowTouch,\n\t    hasTransform = vendor !== false,\n\n\n\t// _transform = prefixStyle(\'transform\'),\n\t_transitionProperty = prefixStyle(\'transitionProperty\'),\n\t    _transitionDuration = prefixStyle(\'transitionDuration\'),\n\t    _transformOrigin = prefixStyle(\'transformOrigin\'),\n\t    _transitionTimingFunction = prefixStyle(\'transitionTimingFunction\'),\n\t    _transitionDelay = prefixStyle(\'transitionDelay\'),\n\t    FULLSCREEN_EV = function () {\n\t\tif (vendor === false) return "fullscreenchange";\n\n\t\tvar fullscreenchange = {\n\t\t\t\'\': \'fullscreenchange\',\n\t\t\t\'webkit\': \'webkitfullscreenchange\',\n\t\t\t\'Moz\': \'mozfullscreenchange\',\n\t\t\t\'O\': \'ofullscreenchange\',\n\t\t\t\'ms\': \'msfullscreenchange\'\n\t\t};\n\n\t\treturn fullscreenchange[vendor];\n\t}(),\n\n\t//鼠标锁定状态变化事件\n\tLOCKPOINTER_EV = function () {\n\t\tif (vendor === false) return "pointerlockchange";\n\n\t\tvar pointerlockchange = {\n\t\t\t\'\': \'pointerlockchange\',\n\t\t\t\'webkit\': \'webkitpointerlockchange\',\n\t\t\t\'Moz\': \'mozpointerlockchange\',\n\t\t\t\'O\': \'opointerlockchange\', //无\n\t\t\t\'ms\': \'mspointerlockchange\' //无\n\t\t};\n\n\t\treturn pointerlockchange[vendor];\n\t}(),\n\t    RESIZE_EV = \'onorientationchange\' in window ? \'orientationchange\' : \'resize\',\n\t    START_EV = webkitTouch ? \'touchstart\' : windowTouch ? \'MSPointerDown\' : \'mousedown\',\n\t    MOVE_EV = webkitTouch ? \'touchmove\' : windowTouch ? \'MSPointerMove\' : \'mousemove\',\n\t    END_EV = webkitTouch ? \'touchend\' : windowTouch ? \'MSPointerUp\' : \'mouseup\',\n\t    CANCEL_EV = webkitTouch ? \'touchcancel\' : windowTouch ? \'MSPointerUp\' : \'mouseup\',\n\t    TRNEND_EV = function () {\n\t\tif (vendor === false) return "transitionend";\n\n\t\tvar transitionEnd = {\n\t\t\t\'\': \'transitionend\',\n\t\t\t\'webkit\': \'webkitTransitionEnd\',\n\t\t\t\'Moz\': \'transitionend\',\n\t\t\t\'O\': \'otransitionend\',\n\t\t\t\'ms\': \'MSTransitionEnd\'\n\t\t};\n\n\t\treturn transitionEnd[vendor];\n\t}(),\n\t    ANIEND_EV = function () {\n\t\tif (vendor === false) return "animationEnd";\n\n\t\tvar transitionEnd = {\n\t\t\t\'\': \'animationEnd\',\n\t\t\t\'webkit\': \'webkitAnimationEnd\',\n\t\t\t\'Moz\': \'mozAnimationEnd\',\n\t\t\t\'O\': \'oanimationend\',\n\t\t\t\'ms\': \'MSAnimationEnd\'\n\t\t};\n\n\t\treturn transitionEnd[vendor];\n\t}(),\n\t    nextFrame = function () {\n\t\treturn window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n\t\t\treturn setTimeout(callback, 1);\n\t\t};\n\t}(),\n\t    cancelFrame = function () {\n\t\treturn window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.mozCancelRequestAnimationFrame || window.oCancelRequestAnimationFrame || window.msCancelRequestAnimationFrame || clearTimeout;\n\t}(),\n\t    checkDomHasPosition = function checkDomHasPosition(dom) {\n\t\tvar position = dom.css("position");\n\t\treturn position == "fixed" || position == "absolute" || position == "relative";\n\t},\n\t    counter = function () {\n\t\tvar a = 0;\n\t\treturn function () {\n\t\t\ta += 1;\n\t\t\treturn a;\n\t\t};\n\t}(),\n\t    language = (navigator.browserLanguage || navigator.language).toLowerCase(),\n\t    t_v = function () {\n\t\tvar _vendors = \'webkitT,MozT,msT,OT\'.split(\',\'),\n\t\t    t,\n\t\t    i = 0,\n\t\t    l = _vendors.length;\n\n\t\tfor (; i < l; i++) {\n\t\t\tt = _vendors[i] + \'ransform\';\n\t\t\tif (t in dummyStyle) {\n\t\t\t\treturn "-" + _vendors[i].substr(0, _vendors[i].length - 1) + "-";\n\t\t\t}\n\t\t}\n\t\treturn "";\n\t}(),\n\t    getCssName = function getCssName(style) {\n\t\treturn style in dummyStyle ? style : t_v + style in dummyStyle ? t_v + style : style;\n\t},\n\n\t//判断盒子模型的版本 2009版 2011版  2013版\n\tboxVendors = "",\n\t    boxType = function () {\n\t\tif ("boxPack" in dummyStyle) {\n\t\t\treturn 2009;\n\t\t}\n\t\tif (t_v + "box-pack" in dummyStyle) {\n\t\t\tboxVendors = t_v;\n\t\t\treturn 2009;\n\t\t}\n\n\t\tif ("flexPack" in dummyStyle) {\n\t\t\treturn 2011;\n\t\t}\n\t\tif (t_v + "flex-pack" in dummyStyle) {\n\t\t\tboxVendors = t_v;\n\t\t\treturn 2011;\n\t\t}\n\n\t\tif ("flexBasis" in dummyStyle) {\n\t\t\treturn 2013;\n\t\t}\n\t\tif (t_v + "flex-basis" in dummyStyle) {\n\t\t\tboxVendors = t_v;\n\t\t\treturn 2013;\n\t\t}\n\t}(),\n\n\n\t//（值）定义盒子模型 display:flex\n\tbox = boxType == 2013 ? boxVendors + "flex" : boxType == 2011 ? boxVendors + "flexbox" : boxType == 2009 ? boxVendors + "box" : "flex",\n\n\t//与盒子内布局方向相同，  start  end 。。。\n\talign_items = boxType == 2013 ? boxVendors + "align-items" : boxType == 2011 ? boxVendors + "flex-pack" : boxType == 2009 ? boxVendors + "box-pack" : "align-items",\n\n\t//与盒子内布局方向相反，  start  end 。。。\n\tjustify_content = boxType == 2013 ? boxVendors + "justify-content" : boxType == 2011 ? boxVendors + "flex-align" : boxType == 2009 ? boxVendors + "box-align" : "justify-content",\n\n\n\t//盒子子元素所占比例\n\tflex = boxType == 2013 ? boxVendors + "flex" : boxType == 2011 ? boxVendors + "flex" : boxType == 2009 ? boxVendors + "box-flex" : "flex",\n\n\n\t//盒子方向\n\tflex_direction = boxType == 2013 ? boxVendors + "flex-direction" : boxType == 2011 ? boxVendors + "flex-direction" : boxType == 2009 ? boxVendors + "box-orient" : "flex-direction",\n\n\n\t//（值）横向排列\n\tflex_direction_row = boxType == 2013 ? "row" : boxType == 2011 ? "row" : boxType == 2009 ? "horizontal" : "row",\n\n\n\t//（值）纵向排列\n\tflex_direction_column = boxType == 2013 ? "column" : boxType == 2011 ? "column" : boxType == 2009 ? "vertical" : "column",\n\t    animation = getCssName("animation"),\n\t    box_shadow = getCssName("box-shadow"),\n\t    backgroundSize = getCssName("background-size"),\n\t    transform = getCssName("transform"),\n\t    transformOrigin = getCssName("transform-origin"),\n\t    transformStyle = getCssName("transform-style"),\n\t    perspective = getCssName("perspective"),\n\t    perspectiveOrigin = getCssName("perspective-origin"),\n\t    border_radius = getCssName("border-radius"),\n\t    box_sizing = getCssName("box-sizing"),\n\t    background_clip = getCssName("background-clip"),\n\t    border_bottom_left_radius = getCssName("border-bottom-left-radius"),\n\t    border_bottom_right_radius = getCssName("border-bottom-right-radius"),\n\t    border_top_left_radius = getCssName("border-top-left-radius"),\n\t    border_top_right_radius = getCssName("border-top-right-radius"),\n\t    backface_visibility = getCssName("backface-visibility"),\n\t    transition = getCssName("transition"),\n\t    transition_property = getCssName("transition-property"),\n\t    transition_duration = getCssName("transition-duration"),\n\t    transition_timing_function = getCssName("transition-timing-function");\n\n\tvar css = {\n\t\t"box": box,\n\t\t"justify-content": justify_content,\n\t\t"align-items": align_items,\n\t\t"background-size": backgroundSize,\n\t\t"background-clip": background_clip,\n\t\t"flex": flex,\n\t\t"flex-direction": flex_direction,\n\t\t"row": flex_direction_row,\n\t\t"column": flex_direction_column,\n\t\t"transform": transform,\n\t\t"transform-origin": transformOrigin,\n\t\t"transform-style": transformStyle,\n\t\t"perspective": perspective,\n\t\t"perspective-origin": perspectiveOrigin,\n\t\t"border-radius": border_radius,\n\t\t"border-bottom-left-radius": border_bottom_left_radius,\n\t\t"border-bottom-right-radius": border_bottom_right_radius,\n\t\t"border-top-left-radius": border_top_left_radius,\n\t\t"border-top-right-radius": border_top_right_radius,\n\t\t"box-sizing": box_sizing,\n\t\t"box-shadow": box_shadow,\n\t\t"backface-visibility": backface_visibility,\n\t\t"transition": transition,\n\t\t"transition-property": transition_property,\n\t\t"transition-duration": transition_duration,\n\t\t"transition-timing-function": transition_timing_function,\n\t\t"animation": animation\n\t},\n\t    gz = function () {\n\t\tvar reg,\n\t\t    a = [];\n\t\tfor (var key in css) {\n\t\t\tif (css.hasOwnProperty(key)) {\n\t\t\t\tif (key == "box" || key == "transition" || key == "flex") {\n\t\t\t\t\ta.push("([^-]" + key + "[^-])");\n\t\t\t\t} else if (key == "row" || key == "column") {\n\t\t\t\t\ta.push(key);\n\t\t\t\t} else {\n\t\t\t\t\ta.push("([^-]" + key + ")");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treg = a.join("|");\n\t\treturn new RegExp(reg, "ig");\n\t}(),\n\t    css_prefix = function css_prefix(data) {\n\t\tvar text = JSON.stringify(data),\n\t\t    newtext = cssfile_prefix(text);\n\t\treturn JSON.parse(newtext);\n\t},\n\t    cssfile_prefix = function cssfile_prefix(data) {\n\t\treturn data.replace(gz, function (a) {\n\t\t\tvar str = a.substr(1, a.length - 2);\n\t\t\tif (str == "box" || str == "transition" || str == "flex") {\n\t\t\t\tvar newstr = css[str];\n\t\t\t\treturn a.substr(0, 1) + newstr + a.substr(a.length - 1);\n\t\t\t} else if (a == "row" || a == "column") {\n\t\t\t\treturn css[a];\n\t\t\t} else {\n\t\t\t\treturn a.substr(0, 1) + css[a.substr(1)];\n\t\t\t}\n\t\t});\n\t},\n\t    fix_css = function fix_css(css) {\n\t\tcss = css.replace(/;/ig, " ; ");\n\t\treturn cssfile_prefix(" " + css);\n\t};\n\n\tdummyStyle = null;\n\n\tDEVICE.has3d = has3d; //是否支持3d\n\tDEVICE.hasTouch = hasTouch; //是否是触摸屏\n\tDEVICE.hasTransform = hasTransform; //是否支持变形\n\n\n\tDEVICE._transform = transform; //自动添加前缀\n\tDEVICE._transitionProperty = _transitionProperty;\n\tDEVICE._transitionDuration = _transitionDuration;\n\tDEVICE._transformOrigin = _transformOrigin;\n\tDEVICE._transitionTimingFunction = _transitionTimingFunction;\n\tDEVICE._transitionDelay = _transitionDelay;\n\n\tDEVICE.RESIZE_EV = RESIZE_EV; //窗口变化\n\tDEVICE.START_EV = START_EV; //点击\n\tDEVICE.MOVE_EV = MOVE_EV; //移动\n\tDEVICE.END_EV = END_EV; //释放\n\tDEVICE.CANCEL_EV = CANCEL_EV; //结束\n\tDEVICE.TRNEND_EV = TRNEND_EV; //变形结束 webkitTransitionEnd\n\tDEVICE.ANIEND_EV = ANIEND_EV; //webkitAnimationEnd\n\tDEVICE.FULLSCREEN_EV = FULLSCREEN_EV; //全屏事件监听\n\tDEVICE.LOCKPOINTER_EV = LOCKPOINTER_EV; //锁定鼠标\n\n\tDEVICE.nextFrame = nextFrame;\n\tDEVICE.cancelFrame = cancelFrame;\n\n\tDEVICE.language = language; //语言版本  zh-cn\n\tDEVICE.counter = counter; //计数器  fn\n\n\tDEVICE.fixObjCss = css_prefix;\n\tDEVICE.fixCss = fix_css;\n\n\tDEVICE.css = css;\n\tDEVICE.boxType = boxType;\n\tDEVICE.boxVendors = boxVendors;\n\n\tDEVICE.checkDomHasPosition = checkDomHasPosition;\n\n\tDEVICE.trim = function (str) {\n\t\treturn str.replace(/(^\\s*)|(\\s*$)/g, "");\n\t};\n\tDEVICE.getBetweenNumber = function (val, min, max) {\n\t\tval = val > max ? max : val;\n\t\tval = val < min ? min : val;\n\t\treturn val;\n\t};\n})();\n\n//rem转px\nDEVICE.rem2Px = function (psdWidth, val) {\n\tvar winWidth = window.innerWidth,\n\t    rem = winWidth / psdWidth * 100;\n\n\treturn rem * val;\n};\n\n//删除html标签\nDEVICE.delHtmlTag = function (str) {\n\treturn str.replace(/<[^>]+>/g, ""); //去掉所有的html标记\n};\n\n//等待几秒执行后续  单位：秒   需要在异步函数中带await调用\nDEVICE.sleep = function (stamp) {\n\tstamp = stamp * 1000;\n\treturn new Promise(function (success) {\n\t\tsetTimeout(function () {\n\t\t\tsuccess();\n\t\t}, stamp);\n\t});\n};\n\nmodule.exports = DEVICE;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\n/**\n * Created by bens on 16-1-13.\n */\n\n//数组操作类\n//--------------------------------------------------------------------\n\n//数组添加数组\n//Array.prototype.pushArray([1,2,3,4])\n\n//获取数组中的最大值（数组中必须全数字）\n//Array.prototype.findMax();\n\n//获取数组中的最小值（数组中必须全数字）\n//Array.prototype.findMin();\n\n//数组排序（数组中必须全数字）\n//@type= "" || "desc"      正序/倒序\n//Array.prototype.sortByNumber(type)\n\n//数组排序（排序的是全中文）\n//数组中全中文或是对象中的某个key的值为全中文\n//不指定key时默认认为数组中都是字符\n//@type = "" || "desc"\n//@key =  数组中对象的key值\n//Array.prototype.sortByChine(key,type);\n\n//删除数组中的重复值（不支持数组中含对象）\n//Array.prototype.delReplace();\n\n//删除指定的值\n//Array.prototype.del(str/number/obj);\n\n\n//将一个数组添加到另一个数组末尾  会改变原数组\nArray.prototype.pushArray = function (b) {\n\tthis.push.apply(this, b);\n\treturn this;\n};\n//获取数组中的最大值  数组中不能有字母或对象\n// null,false转换为1  true转换为2   可以filter（function）后在求值\nArray.prototype.findMax = function () {\n\treturn Math.max.apply(null, this);\n};\n//获取数组中的最小值 数组中不能有字母\nArray.prototype.findMin = function () {\n\treturn Math.min.apply(null, this);\n};\n//数组排序  按数字大小   默认是按字符排序\nArray.prototype.sortByNumber = function (type) {\n\tif (type == "desc") {\n\t\tthis.sort(function (a, b) {\n\t\t\treturn a > b ? -1 : 1;\n\t\t});\n\t} else {\n\t\tthis.sort(function (a, b) {\n\t\t\treturn a > b ? 1 : -1;\n\t\t});\n\t}\n\treturn this;\n};\n//数组排序  中文    数组中如果是对象使用key,否则传空   type默认从小到大，desc反序\nArray.prototype.sortByChine = function (key, type) {\n\tthis.sort(function (a, b) {\n\t\tif (key) {\n\t\t\ta = a[key];\n\t\t\tb = b[key];\n\t\t}\n\t\ta = a.toString();\n\t\tb = b.toString();\n\n\t\tif (type == "desc") {\n\t\t\treturn b.localeCompare(a);\n\t\t} else {\n\t\t\treturn a.localeCompare(b);\n\t\t}\n\t});\n\n\treturn this;\n};\n//删除数组中的重复项（不能处理对象）\nArray.prototype.delReplace = function () {\n\tvar arr = this,\n\t    obj = {},\n\t    back = [];\n\n\tfor (var i = 0, l = arr.length; i < l; i++) {\n\t\tvar val = arr[i];\n\t\tif (!obj.hasOwnProperty(val)) {\n\t\t\tobj[val] = true;\n\t\t\tback.push(val);\n\t\t}\n\t}\n\n\treturn back;\n};\n\n//删除数组中的一个值 用原生的filter方法返回新数组\nArray.prototype.del = function (str) {\n\treturn this.filter(function (a, index) {\n\t\tif (a != str) {\n\t\t\treturn a;\n\t\t}\n\t});\n};\n\nmodule.exports = null;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXM2L2xpYi9wcm8vYXJyYXkuZXM2PzJmMjIiXSwibmFtZXMiOlsiQXJyYXkiLCJwcm90b3R5cGUiLCJwdXNoQXJyYXkiLCJiIiwicHVzaCIsImFwcGx5IiwiZmluZE1heCIsIk1hdGgiLCJtYXgiLCJmaW5kTWluIiwibWluIiwic29ydEJ5TnVtYmVyIiwidHlwZSIsInNvcnQiLCJhIiwic29ydEJ5Q2hpbmUiLCJrZXkiLCJ0b1N0cmluZyIsImxvY2FsZUNvbXBhcmUiLCJkZWxSZXBsYWNlIiwiYXJyIiwib2JqIiwiYmFjayIsImkiLCJsIiwibGVuZ3RoIiwidmFsIiwiaGFzT3duUHJvcGVydHkiLCJkZWwiLCJzdHIiLCJmaWx0ZXIiLCJpbmRleCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFNQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7QUFPQTtBQUNBQSxNQUFNQyxTQUFOLENBQWdCQyxTQUFoQixHQUE0QixVQUFTQyxDQUFULEVBQVc7QUFDdEMsTUFBS0MsSUFBTCxDQUFVQyxLQUFWLENBQWdCLElBQWhCLEVBQXFCRixDQUFyQjtBQUNBLFFBQU8sSUFBUDtBQUNBLENBSEQ7QUFJQTtBQUNBO0FBQ0FILE1BQU1DLFNBQU4sQ0FBZ0JLLE9BQWhCLEdBQXlCLFlBQVU7QUFDbEMsUUFBT0MsS0FBS0MsR0FBTCxDQUFTSCxLQUFULENBQWUsSUFBZixFQUFvQixJQUFwQixDQUFQO0FBQ0EsQ0FGRDtBQUdBO0FBQ0FMLE1BQU1DLFNBQU4sQ0FBZ0JRLE9BQWhCLEdBQXlCLFlBQVU7QUFDbEMsUUFBT0YsS0FBS0csR0FBTCxDQUFTTCxLQUFULENBQWUsSUFBZixFQUFvQixJQUFwQixDQUFQO0FBQ0EsQ0FGRDtBQUdBO0FBQ0FMLE1BQU1DLFNBQU4sQ0FBZ0JVLFlBQWhCLEdBQThCLFVBQVNDLElBQVQsRUFBYztBQUMzQyxLQUFHQSxRQUFRLE1BQVgsRUFBa0I7QUFDakIsT0FBS0MsSUFBTCxDQUFVLFVBQVNDLENBQVQsRUFBV1gsQ0FBWCxFQUFhO0FBQUUsVUFBUVcsSUFBRVgsQ0FBSCxHQUFPLENBQUMsQ0FBUixHQUFZLENBQW5CO0FBQXVCLEdBQWhEO0FBQ0EsRUFGRCxNQUVLO0FBQ0osT0FBS1UsSUFBTCxDQUFVLFVBQVNDLENBQVQsRUFBV1gsQ0FBWCxFQUFhO0FBQUUsVUFBUVcsSUFBRVgsQ0FBSCxHQUFPLENBQVAsR0FBVyxDQUFDLENBQW5CO0FBQXVCLEdBQWhEO0FBQ0E7QUFDRCxRQUFPLElBQVA7QUFDQSxDQVBEO0FBUUE7QUFDQUgsTUFBTUMsU0FBTixDQUFnQmMsV0FBaEIsR0FBNkIsVUFBU0MsR0FBVCxFQUFhSixJQUFiLEVBQWtCO0FBQzlDLE1BQUtDLElBQUwsQ0FBVSxVQUFTQyxDQUFULEVBQVdYLENBQVgsRUFBYTtBQUN0QixNQUFHYSxHQUFILEVBQU87QUFDTkYsT0FBSUEsRUFBRUUsR0FBRixDQUFKO0FBQ0FiLE9BQUlBLEVBQUVhLEdBQUYsQ0FBSjtBQUNBO0FBQ0RGLE1BQUlBLEVBQUVHLFFBQUYsRUFBSjtBQUNBZCxNQUFJQSxFQUFFYyxRQUFGLEVBQUo7O0FBRUEsTUFBR0wsUUFBUSxNQUFYLEVBQWtCO0FBQ2pCLFVBQU9ULEVBQUVlLGFBQUYsQ0FBZ0JKLENBQWhCLENBQVA7QUFDQSxHQUZELE1BRUs7QUFDSixVQUFPQSxFQUFFSSxhQUFGLENBQWdCZixDQUFoQixDQUFQO0FBQ0E7QUFDRCxFQWJEOztBQWVBLFFBQU8sSUFBUDtBQUNBLENBakJEO0FBa0JBO0FBQ0FILE1BQU1DLFNBQU4sQ0FBZ0JrQixVQUFoQixHQUE2QixZQUFVO0FBQ3RDLEtBQUlDLE1BQU0sSUFBVjtBQUFBLEtBQ0NDLE1BQU0sRUFEUDtBQUFBLEtBRUNDLE9BQU8sRUFGUjs7QUFJQSxNQUFJLElBQUlDLElBQUcsQ0FBUCxFQUFTQyxJQUFFSixJQUFJSyxNQUFuQixFQUEwQkYsSUFBRUMsQ0FBNUIsRUFBOEJELEdBQTlCLEVBQWtDO0FBQ2pDLE1BQUlHLE1BQU1OLElBQUlHLENBQUosQ0FBVjtBQUNBLE1BQUcsQ0FBQ0YsSUFBSU0sY0FBSixDQUFtQkQsR0FBbkIsQ0FBSixFQUE0QjtBQUMzQkwsT0FBSUssR0FBSixJQUFXLElBQVg7QUFDQUosUUFBS2xCLElBQUwsQ0FBVXNCLEdBQVY7QUFDQTtBQUNEOztBQUVELFFBQU9KLElBQVA7QUFFQSxDQWZEOztBQWtCQTtBQUNBdEIsTUFBTUMsU0FBTixDQUFnQjJCLEdBQWhCLEdBQXNCLFVBQVNDLEdBQVQsRUFBYTtBQUNsQyxRQUFPLEtBQUtDLE1BQUwsQ0FBWSxVQUFTaEIsQ0FBVCxFQUFXaUIsS0FBWCxFQUFpQjtBQUNuQyxNQUFHakIsS0FBR2UsR0FBTixFQUFVO0FBQ1QsVUFBT2YsQ0FBUDtBQUNBO0FBQ0QsRUFKTSxDQUFQO0FBS0EsQ0FORDs7QUFTQWtCLE9BQU9DLE9BQVAsR0FBaUIsSUFBakIiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBiZW5zIG9uIDE2LTEtMTMuXG4gKi9cblxuXG5cbi8v5pWw57uE5pON5L2c57G7XG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8v5pWw57uE5re75Yqg5pWw57uEXG4vL0FycmF5LnByb3RvdHlwZS5wdXNoQXJyYXkoWzEsMiwzLDRdKVxuXG4vL+iOt+WPluaVsOe7hOS4reeahOacgOWkp+WAvO+8iOaVsOe7hOS4reW/hemhu+WFqOaVsOWtl++8iVxuLy9BcnJheS5wcm90b3R5cGUuZmluZE1heCgpO1xuXG4vL+iOt+WPluaVsOe7hOS4reeahOacgOWwj+WAvO+8iOaVsOe7hOS4reW/hemhu+WFqOaVsOWtl++8iVxuLy9BcnJheS5wcm90b3R5cGUuZmluZE1pbigpO1xuXG4vL+aVsOe7hOaOkuW6j++8iOaVsOe7hOS4reW/hemhu+WFqOaVsOWtl++8iVxuLy9AdHlwZT0gXCJcIiB8fCBcImRlc2NcIiAgICAgIOato+W6jy/lgJLluo9cbi8vQXJyYXkucHJvdG90eXBlLnNvcnRCeU51bWJlcih0eXBlKVxuXG4vL+aVsOe7hOaOkuW6j++8iOaOkuW6j+eahOaYr+WFqOS4reaWh++8iVxuLy/mlbDnu4TkuK3lhajkuK3mlofmiJbmmK/lr7nosaHkuK3nmoTmn5DkuKprZXnnmoTlgLzkuLrlhajkuK3mlodcbi8v5LiN5oyH5a6aa2V55pe26buY6K6k6K6k5Li65pWw57uE5Lit6YO95piv5a2X56ymXG4vL0B0eXBlID0gXCJcIiB8fCBcImRlc2NcIlxuLy9Aa2V5ID0gIOaVsOe7hOS4reWvueixoeeahGtleeWAvFxuLy9BcnJheS5wcm90b3R5cGUuc29ydEJ5Q2hpbmUoa2V5LHR5cGUpO1xuXG4vL+WIoOmZpOaVsOe7hOS4reeahOmHjeWkjeWAvO+8iOS4jeaUr+aMgeaVsOe7hOS4reWQq+Wvueixoe+8iVxuLy9BcnJheS5wcm90b3R5cGUuZGVsUmVwbGFjZSgpO1xuXG4vL+WIoOmZpOaMh+WumueahOWAvFxuLy9BcnJheS5wcm90b3R5cGUuZGVsKHN0ci9udW1iZXIvb2JqKTtcblxuXG5cblxuXG5cbi8v5bCG5LiA5Liq5pWw57uE5re75Yqg5Yiw5Y+m5LiA5Liq5pWw57uE5pyr5bC+ICDkvJrmlLnlj5jljp/mlbDnu4RcbkFycmF5LnByb3RvdHlwZS5wdXNoQXJyYXkgPSBmdW5jdGlvbihiKXtcblx0dGhpcy5wdXNoLmFwcGx5KHRoaXMsYik7XG5cdHJldHVybiB0aGlzO1xufTtcbi8v6I635Y+W5pWw57uE5Lit55qE5pyA5aSn5YC8ICDmlbDnu4TkuK3kuI3og73mnInlrZfmr43miJblr7nosaFcbi8vIG51bGwsZmFsc2XovazmjaLkuLoxICB0cnVl6L2s5o2i5Li6MiAgIOWPr+S7pWZpbHRlcu+8iGZ1bmN0aW9u77yJ5ZCO5Zyo5rGC5YC8XG5BcnJheS5wcm90b3R5cGUuZmluZE1heD0gZnVuY3Rpb24oKXtcblx0cmV0dXJuIE1hdGgubWF4LmFwcGx5KG51bGwsdGhpcyk7XG59O1xuLy/ojrflj5bmlbDnu4TkuK3nmoTmnIDlsI/lgLwg5pWw57uE5Lit5LiN6IO95pyJ5a2X5q+NXG5BcnJheS5wcm90b3R5cGUuZmluZE1pbj0gZnVuY3Rpb24oKXtcblx0cmV0dXJuIE1hdGgubWluLmFwcGx5KG51bGwsdGhpcyk7XG59O1xuLy/mlbDnu4TmjpLluo8gIOaMieaVsOWtl+Wkp+WwjyAgIOm7mOiupOaYr+aMieWtl+espuaOkuW6j1xuQXJyYXkucHJvdG90eXBlLnNvcnRCeU51bWJlcj0gZnVuY3Rpb24odHlwZSl7XG5cdGlmKHR5cGUgPT0gXCJkZXNjXCIpe1xuXHRcdHRoaXMuc29ydChmdW5jdGlvbihhLGIpeyByZXR1cm4gKGE+Yik/IC0xIDogMTsgfSk7XG5cdH1lbHNle1xuXHRcdHRoaXMuc29ydChmdW5jdGlvbihhLGIpeyByZXR1cm4gKGE+Yik/IDEgOiAtMTsgfSk7XG5cdH1cblx0cmV0dXJuIHRoaXM7XG59O1xuLy/mlbDnu4TmjpLluo8gIOS4reaWhyAgICDmlbDnu4TkuK3lpoLmnpzmmK/lr7nosaHkvb/nlKhrZXks5ZCm5YiZ5Lyg56m6ICAgdHlwZem7mOiupOS7juWwj+WIsOWkp++8jGRlc2Plj43luo9cbkFycmF5LnByb3RvdHlwZS5zb3J0QnlDaGluZT0gZnVuY3Rpb24oa2V5LHR5cGUpe1xuXHR0aGlzLnNvcnQoZnVuY3Rpb24oYSxiKXtcblx0XHRpZihrZXkpe1xuXHRcdFx0YSA9IGFba2V5XTtcblx0XHRcdGIgPSBiW2tleV07XG5cdFx0fVxuXHRcdGEgPSBhLnRvU3RyaW5nKCk7XG5cdFx0YiA9IGIudG9TdHJpbmcoKTtcblxuXHRcdGlmKHR5cGUgPT0gXCJkZXNjXCIpe1xuXHRcdFx0cmV0dXJuIGIubG9jYWxlQ29tcGFyZShhKTtcblx0XHR9ZWxzZXtcblx0XHRcdHJldHVybiBhLmxvY2FsZUNvbXBhcmUoYik7XG5cdFx0fVxuXHR9KTtcblxuXHRyZXR1cm4gdGhpcztcbn07XG4vL+WIoOmZpOaVsOe7hOS4reeahOmHjeWkjemhue+8iOS4jeiDveWkhOeQhuWvueixoe+8iVxuQXJyYXkucHJvdG90eXBlLmRlbFJlcGxhY2UgPSBmdW5jdGlvbigpe1xuXHR2YXIgYXJyID0gdGhpcyxcblx0XHRvYmogPSB7fSxcblx0XHRiYWNrID0gW107XG5cblx0Zm9yKHZhciBpPSAwLGw9YXJyLmxlbmd0aDtpPGw7aSsrKXtcblx0XHR2YXIgdmFsID0gYXJyW2ldO1xuXHRcdGlmKCFvYmouaGFzT3duUHJvcGVydHkodmFsKSl7XG5cdFx0XHRvYmpbdmFsXSA9IHRydWU7XG5cdFx0XHRiYWNrLnB1c2godmFsKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gYmFjaztcblxufTtcblxuXG4vL+WIoOmZpOaVsOe7hOS4reeahOS4gOS4quWAvCDnlKjljp/nlJ/nmoRmaWx0ZXLmlrnms5Xov5Tlm57mlrDmlbDnu4RcbkFycmF5LnByb3RvdHlwZS5kZWwgPSBmdW5jdGlvbihzdHIpe1xuXHRyZXR1cm4gdGhpcy5maWx0ZXIoZnVuY3Rpb24oYSxpbmRleCl7XG5cdFx0aWYoYSE9c3RyKXtcblx0XHRcdHJldHVybiBhO1xuXHRcdH1cblx0fSlcbn07XG5cblxubW9kdWxlLmV4cG9ydHMgPSBudWxsO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9lczYvbGliL3Byby9hcnJheS5lczYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\n//viewport设置，高精度效果图用。 可能动画性能降低？\n//设置了viewport宽度后，最好用rem单位布局。\n\n\n//使用时meta需要设置\n//<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, minimum-scale=1, maximum-scale=1">\n//psd_width 需要设置psd的实际输出宽度\n//psd中的元素布局按实际大小除以100，然后使用rem为单位\n\n\n//改变viewport大小\n\nvar setFn = function setFn(psdWidth) {\n\tvar psd_width = psdWidth,\n\t    win_width = window.innerWidth,\n\t    viewport = document.querySelector(\'meta[name="viewport"]\'),\n\n\t// dpr = window.devicePixelRatio || 1,\n\t// scale = 1 / dpr,\n\trem;\n\n\t// 设置meta\n\tif (viewport) {\n\t\tviewport.setAttribute(\'content\', \'width= device-width,initial-scale=1,maximum-scale=1, minimum-scale=1,user-scalable=no\');\n\t} else {\n\t\t$("head").append(\'<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, minimum-scale=1, maximum-scale=1">\');\n\t}\n\n\t//设置页面字体,可使用rem\n\tvar style = document.createElement(\'style\');\n\twin_width = window.innerWidth;\n\trem = win_width / psd_width * 100;\n\n\tstyle.innerHTML = "html{font-size:" + rem + "px!important;}";\n\tdocument.querySelector("head").appendChild(style);\n\n\t//有些浏览器viewport宽度获取不准确\n\t//因此初始不停刷新页面字体\n\tvar temp_interval = setInterval(function () {\n\n\t\twin_width = window.innerWidth;\n\t\tvar _rem = win_width / psd_width * 100;\n\t\tconsole.log(win_width, psd_width, rem);\n\t\tif (rem != _rem) {\n\t\t\trem = _rem;\n\t\t\tstyle.innerHTML = "html{font-size:" + rem + "px!important;}";\n\t\t}\n\t}, 500);\n\t//10秒后取消自动刷新\n\tsetTimeout(function () {\n\t\tclearInterval(temp_interval);\n\t}, 10000);\n\n\t//页面大小变化刷新\n\t$(window).resize(function () {\n\t\twin_width = window.innerWidth;\n\t\trem = win_width / psd_width * 100;\n\t\tstyle.innerHTML = "html{font-size:" + rem + "px!important;}";\n\t});\n};\n\nmodule.exports = setFn;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXM2L2xpYi91aS9zZXRWaWV3cG9ydC5lczY/ZGIxNiJdLCJuYW1lcyI6WyJzZXRGbiIsInBzZFdpZHRoIiwicHNkX3dpZHRoIiwid2luX3dpZHRoIiwid2luZG93IiwiaW5uZXJXaWR0aCIsInZpZXdwb3J0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicmVtIiwic2V0QXR0cmlidXRlIiwiJCIsImFwcGVuZCIsInN0eWxlIiwiY3JlYXRlRWxlbWVudCIsImlubmVySFRNTCIsImFwcGVuZENoaWxkIiwidGVtcF9pbnRlcnZhbCIsInNldEludGVydmFsIiwiX3JlbSIsImNvbnNvbGUiLCJsb2ciLCJzZXRUaW1lb3V0IiwiY2xlYXJJbnRlcnZhbCIsInJlc2l6ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBOztBQUVBLElBQUlBLFFBQVEsU0FBUkEsS0FBUSxDQUFTQyxRQUFULEVBQWtCO0FBQzdCLEtBQUlDLFlBQVlELFFBQWhCO0FBQUEsS0FDQ0UsWUFBWUMsT0FBT0MsVUFEcEI7QUFBQSxLQUVDQyxXQUFXQyxTQUFTQyxhQUFULENBQXVCLHVCQUF2QixDQUZaOztBQUdDO0FBQ0E7QUFDQUMsSUFMRDs7QUFPQTtBQUNBLEtBQUdILFFBQUgsRUFBWTtBQUNYQSxXQUFTSSxZQUFULENBQXNCLFNBQXRCLEVBQWlDLHVGQUFqQztBQUNBLEVBRkQsTUFFSztBQUNKQyxJQUFFLE1BQUYsRUFBVUMsTUFBVixDQUFpQiwwSEFBakI7QUFDQTs7QUFHRDtBQUNBLEtBQUlDLFFBQVFOLFNBQVNPLGFBQVQsQ0FBdUIsT0FBdkIsQ0FBWjtBQUNBWCxhQUFZQyxPQUFPQyxVQUFuQjtBQUNBSSxPQUFNTixZQUFVRCxTQUFWLEdBQW9CLEdBQTFCOztBQUVBVyxPQUFNRSxTQUFOLEdBQWtCLG9CQUFrQk4sR0FBbEIsR0FBc0IsZ0JBQXhDO0FBQ0FGLFVBQVNDLGFBQVQsQ0FBdUIsTUFBdkIsRUFBK0JRLFdBQS9CLENBQTJDSCxLQUEzQzs7QUFFQTtBQUNBO0FBQ0EsS0FBSUksZ0JBQWdCQyxZQUFZLFlBQVk7O0FBRTNDZixjQUFZQyxPQUFPQyxVQUFuQjtBQUNBLE1BQUljLE9BQU9oQixZQUFVRCxTQUFWLEdBQW9CLEdBQS9CO0FBQ0FrQixVQUFRQyxHQUFSLENBQVlsQixTQUFaLEVBQXNCRCxTQUF0QixFQUFnQ08sR0FBaEM7QUFDQSxNQUFHQSxPQUFPVSxJQUFWLEVBQWU7QUFDZFYsU0FBTVUsSUFBTjtBQUNBTixTQUFNRSxTQUFOLEdBQWtCLG9CQUFrQk4sR0FBbEIsR0FBc0IsZ0JBQXhDO0FBQ0E7QUFDRCxFQVRtQixFQVNsQixHQVRrQixDQUFwQjtBQVVBO0FBQ0FhLFlBQVcsWUFBVTtBQUNwQkMsZ0JBQWNOLGFBQWQ7QUFDQSxFQUZELEVBRUUsS0FGRjs7QUFLQTtBQUNBTixHQUFFUCxNQUFGLEVBQVVvQixNQUFWLENBQWlCLFlBQVU7QUFDMUJyQixjQUFZQyxPQUFPQyxVQUFuQjtBQUNBSSxRQUFNTixZQUFVRCxTQUFWLEdBQW9CLEdBQTFCO0FBQ0FXLFFBQU1FLFNBQU4sR0FBa0Isb0JBQWtCTixHQUFsQixHQUFzQixnQkFBeEM7QUFDQSxFQUpEO0FBS0EsQ0FoREQ7O0FBbURBZ0IsT0FBT0MsT0FBUCxHQUFpQjFCLEtBQWpCIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vdmlld3BvcnTorr7nva7vvIzpq5jnsr7luqbmlYjmnpzlm77nlKjjgIIg5Y+v6IO95Yqo55S75oCn6IO96ZmN5L2O77yfXG4vL+iuvue9ruS6hnZpZXdwb3J05a695bqm5ZCO77yM5pyA5aW955SocmVt5Y2V5L2N5biD5bGA44CCXG5cblxuLy/kvb/nlKjml7ZtZXRh6ZyA6KaB6K6+572uXG4vLzxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSwgdXNlci1zY2FsYWJsZT1ubywgbWluaW11bS1zY2FsZT0xLCBtYXhpbXVtLXNjYWxlPTFcIj5cbi8vcHNkX3dpZHRoIOmcgOimgeiuvue9rnBzZOeahOWunumZhei+k+WHuuWuveW6plxuLy9wc2TkuK3nmoTlhYPntKDluIPlsYDmjInlrp7pmYXlpKflsI/pmaTku6UxMDDvvIznhLblkI7kvb/nlKhyZW3kuLrljZXkvY1cblxuXG4vL+aUueWPmHZpZXdwb3J05aSn5bCPXG5cbmxldCBzZXRGbiA9IGZ1bmN0aW9uKHBzZFdpZHRoKXtcblx0dmFyIHBzZF93aWR0aCA9IHBzZFdpZHRoLFxuXHRcdHdpbl93aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoLFxuXHRcdHZpZXdwb3J0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWV0YVtuYW1lPVwidmlld3BvcnRcIl0nKSxcblx0XHQvLyBkcHIgPSB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyB8fCAxLFxuXHRcdC8vIHNjYWxlID0gMSAvIGRwcixcblx0XHRyZW07XG5cblx0Ly8g6K6+572ubWV0YVxuXHRpZih2aWV3cG9ydCl7XG5cdFx0dmlld3BvcnQuc2V0QXR0cmlidXRlKCdjb250ZW50JywgJ3dpZHRoPSBkZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xLG1heGltdW0tc2NhbGU9MSwgbWluaW11bS1zY2FsZT0xLHVzZXItc2NhbGFibGU9bm8nKTtcblx0fWVsc2V7XG5cdFx0JChcImhlYWRcIikuYXBwZW5kKCc8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEsIHVzZXItc2NhbGFibGU9bm8sIG1pbmltdW0tc2NhbGU9MSwgbWF4aW11bS1zY2FsZT0xXCI+Jyk7XG5cdH1cblxuXG5cdC8v6K6+572u6aG16Z2i5a2X5L2TLOWPr+S9v+eUqHJlbVxuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuXHR3aW5fd2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcblx0cmVtID0gd2luX3dpZHRoL3BzZF93aWR0aCoxMDA7XG5cblx0c3R5bGUuaW5uZXJIVE1MID0gXCJodG1se2ZvbnQtc2l6ZTpcIityZW0rXCJweCFpbXBvcnRhbnQ7fVwiO1xuXHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaGVhZFwiKS5hcHBlbmRDaGlsZChzdHlsZSk7XG5cblx0Ly/mnInkupvmtY/op4jlmah2aWV3cG9ydOWuveW6puiOt+WPluS4jeWHhuehrlxuXHQvL+WboOatpOWIneWni+S4jeWBnOWIt+aWsOmhtemdouWtl+S9k1xuXHRsZXQgdGVtcF9pbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcblxuXHRcdHdpbl93aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoO1xuXHRcdGxldCBfcmVtID0gd2luX3dpZHRoL3BzZF93aWR0aCoxMDA7XG5cdFx0Y29uc29sZS5sb2cod2luX3dpZHRoLHBzZF93aWR0aCxyZW0pXG5cdFx0aWYocmVtICE9IF9yZW0pe1xuXHRcdFx0cmVtID0gX3JlbTtcblx0XHRcdHN0eWxlLmlubmVySFRNTCA9IFwiaHRtbHtmb250LXNpemU6XCIrcmVtK1wicHghaW1wb3J0YW50O31cIjtcblx0XHR9XG5cdH0sNTAwKTtcblx0Ly8xMOenkuWQjuWPlua2iOiHquWKqOWIt+aWsFxuXHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0Y2xlYXJJbnRlcnZhbCh0ZW1wX2ludGVydmFsKTtcblx0fSwxMDAwMCk7XG5cblxuXHQvL+mhtemdouWkp+Wwj+WPmOWMluWIt+aWsFxuXHQkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKCl7XG5cdFx0d2luX3dpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG5cdFx0cmVtID0gd2luX3dpZHRoL3BzZF93aWR0aCoxMDA7XG5cdFx0c3R5bGUuaW5uZXJIVE1MID0gXCJodG1se2ZvbnQtc2l6ZTpcIityZW0rXCJweCFpbXBvcnRhbnQ7fVwiO1xuXHR9KTtcbn07XG5cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRGbjtcblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2VzNi9saWIvdWkvc2V0Vmlld3BvcnQuZXM2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n')},function(module,exports,__webpack_require__){eval('/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function("return this")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(8);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS1tb2R1bGUuanM/ZGI0MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFCQUFxQixjQUFjOztBQUVuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLy8gVGhpcyBtZXRob2Qgb2Ygb2J0YWluaW5nIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0IG5lZWRzIHRvIGJlXG4vLyBrZXB0IGlkZW50aWNhbCB0byB0aGUgd2F5IGl0IGlzIG9idGFpbmVkIGluIHJ1bnRpbWUuanNcbnZhciBnID0gKGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcyB9KSgpIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcblxuLy8gVXNlIGBnZXRPd25Qcm9wZXJ0eU5hbWVzYCBiZWNhdXNlIG5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCBjYWxsaW5nXG4vLyBgaGFzT3duUHJvcGVydHlgIG9uIHRoZSBnbG9iYWwgYHNlbGZgIG9iamVjdCBpbiBhIHdvcmtlci4gU2VlICMxODMuXG52YXIgaGFkUnVudGltZSA9IGcucmVnZW5lcmF0b3JSdW50aW1lICYmXG4gIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGcpLmluZGV4T2YoXCJyZWdlbmVyYXRvclJ1bnRpbWVcIikgPj0gMDtcblxuLy8gU2F2ZSB0aGUgb2xkIHJlZ2VuZXJhdG9yUnVudGltZSBpbiBjYXNlIGl0IG5lZWRzIHRvIGJlIHJlc3RvcmVkIGxhdGVyLlxudmFyIG9sZFJ1bnRpbWUgPSBoYWRSdW50aW1lICYmIGcucmVnZW5lcmF0b3JSdW50aW1lO1xuXG4vLyBGb3JjZSByZWV2YWx1dGF0aW9uIG9mIHJ1bnRpbWUuanMuXG5nLnJlZ2VuZXJhdG9yUnVudGltZSA9IHVuZGVmaW5lZDtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9ydW50aW1lXCIpO1xuXG5pZiAoaGFkUnVudGltZSkge1xuICAvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBydW50aW1lLlxuICBnLnJlZ2VuZXJhdG9yUnVudGltZSA9IG9sZFJ1bnRpbWU7XG59IGVsc2Uge1xuICAvLyBSZW1vdmUgdGhlIGdsb2JhbCBwcm9wZXJ0eSBhZGRlZCBieSBydW50aW1lLmpzLlxuICB0cnkge1xuICAgIGRlbGV0ZSBnLnJlZ2VuZXJhdG9yUnVudGltZTtcbiAgfSBjYXRjaChlKSB7XG4gICAgZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSB1bmRlZmluZWQ7XG4gIH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9yZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUtbW9kdWxlLmpzXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n')},function(module,exports){eval('/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  "use strict";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === "function" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || "@@iterator";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";\n  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";\n\n  var inModule = typeof module === "object";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we\'re in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don\'t bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we\'re in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there\'s no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don\'t have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: "normal", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: "throw", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = "suspendedStart";\n  var GenStateSuspendedYield = "suspendedYield";\n  var GenStateExecuting = "executing";\n  var GenStateCompleted = "completed";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don\'t natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = "GeneratorFunction";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    ["next", "throw", "return"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === "function" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === "GeneratorFunction"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = "GeneratorFunction";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, "__await")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === "throw") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === "object" &&\n            hasOwn.call(value, "__await")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke("next", value, resolve, reject);\n          }, function(err) {\n            invoke("throw", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error("Generator is already running");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === "throw") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === "next") {\n          // Setting context._sent for legacy support of Babel\'s\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === "throw") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === "return") {\n          context.abrupt("return", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === "normal") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === "throw") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = "throw";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === "throw") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = "return";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === "throw") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // "return" to "throw", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = "throw";\n        context.arg = new TypeError(\n          "The iterator does not provide a \'throw\' method");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === "throw") {\n      context.method = "throw";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = "throw";\n      context.arg = new TypeError("iterator result is not an object");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was "throw" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was "next", forget context.arg since it has been\n      // "consumed" by the delegate iterator. If context.method was\n      // "return", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== "return") {\n        context.method = "next";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = "Generator";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers\' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn\'t happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return "[object Generator]";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = "normal";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: "root" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === "function") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel\'s\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = "next";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === "t" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === "throw") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = "throw";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = "next";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === "root") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle("end");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, "catchLoc");\n          var hasFinally = hasOwn.call(entry, "finallyLoc");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error("try statement without catch or finally");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, "finallyLoc") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === "break" ||\n           type === "continue") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = "next";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === "throw") {\n        throw record.arg;\n      }\n\n      if (record.type === "break" ||\n          record.type === "continue") {\n        this.next = record.arg;\n      } else if (record.type === "return") {\n        this.rval = this.arg = record.arg;\n        this.method = "return";\n        this.next = "end";\n      } else if (record.type === "normal" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    "catch": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === "throw") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error("illegal catch attempt");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === "next") {\n        // Deliberately forget the last sent value so that we don\'t\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we\'re in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function("return this")()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcz8xYWFiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLEtBQUs7QUFDTCxjQUFjO0FBQ2Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQ7QUFDekQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQSx3Q0FBd0MsV0FBVztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9DQUFvQyxjQUFjO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQ0FBaUMsa0JBQWtCO0FBQ25EO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQkFBaUI7O0FBRWpCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixpQkFBaUI7QUFDekM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFQSxXQUFXO0FBQ1g7QUFDQTtBQUNBOztBQUVBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7O0FBRUEsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBLDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0EsOENBQThDLFFBQVE7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0EsOENBQThDLFFBQVE7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsZUFBZSxjQUFjO0FBQzdCIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbiEoZnVuY3Rpb24oZ2xvYmFsKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBPcCA9IE9iamVjdC5wcm90b3R5cGU7XG4gIHZhciBoYXNPd24gPSBPcC5oYXNPd25Qcm9wZXJ0eTtcbiAgdmFyIHVuZGVmaW5lZDsgLy8gTW9yZSBjb21wcmVzc2libGUgdGhhbiB2b2lkIDAuXG4gIHZhciAkU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiID8gU3ltYm9sIDoge307XG4gIHZhciBpdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuaXRlcmF0b3IgfHwgXCJAQGl0ZXJhdG9yXCI7XG4gIHZhciBhc3luY0l0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5hc3luY0l0ZXJhdG9yIHx8IFwiQEBhc3luY0l0ZXJhdG9yXCI7XG4gIHZhciB0b1N0cmluZ1RhZ1N5bWJvbCA9ICRTeW1ib2wudG9TdHJpbmdUYWcgfHwgXCJAQHRvU3RyaW5nVGFnXCI7XG5cbiAgdmFyIGluTW9kdWxlID0gdHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIjtcbiAgdmFyIHJ1bnRpbWUgPSBnbG9iYWwucmVnZW5lcmF0b3JSdW50aW1lO1xuICBpZiAocnVudGltZSkge1xuICAgIGlmIChpbk1vZHVsZSkge1xuICAgICAgLy8gSWYgcmVnZW5lcmF0b3JSdW50aW1lIGlzIGRlZmluZWQgZ2xvYmFsbHkgYW5kIHdlJ3JlIGluIGEgbW9kdWxlLFxuICAgICAgLy8gbWFrZSB0aGUgZXhwb3J0cyBvYmplY3QgaWRlbnRpY2FsIHRvIHJlZ2VuZXJhdG9yUnVudGltZS5cbiAgICAgIG1vZHVsZS5leHBvcnRzID0gcnVudGltZTtcbiAgICB9XG4gICAgLy8gRG9uJ3QgYm90aGVyIGV2YWx1YXRpbmcgdGhlIHJlc3Qgb2YgdGhpcyBmaWxlIGlmIHRoZSBydW50aW1lIHdhc1xuICAgIC8vIGFscmVhZHkgZGVmaW5lZCBnbG9iYWxseS5cbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBEZWZpbmUgdGhlIHJ1bnRpbWUgZ2xvYmFsbHkgKGFzIGV4cGVjdGVkIGJ5IGdlbmVyYXRlZCBjb2RlKSBhcyBlaXRoZXJcbiAgLy8gbW9kdWxlLmV4cG9ydHMgKGlmIHdlJ3JlIGluIGEgbW9kdWxlKSBvciBhIG5ldywgZW1wdHkgb2JqZWN0LlxuICBydW50aW1lID0gZ2xvYmFsLnJlZ2VuZXJhdG9yUnVudGltZSA9IGluTW9kdWxlID8gbW9kdWxlLmV4cG9ydHMgOiB7fTtcblxuICBmdW5jdGlvbiB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7XG4gICAgLy8gSWYgb3V0ZXJGbiBwcm92aWRlZCBhbmQgb3V0ZXJGbi5wcm90b3R5cGUgaXMgYSBHZW5lcmF0b3IsIHRoZW4gb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IuXG4gICAgdmFyIHByb3RvR2VuZXJhdG9yID0gb3V0ZXJGbiAmJiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvciA/IG91dGVyRm4gOiBHZW5lcmF0b3I7XG4gICAgdmFyIGdlbmVyYXRvciA9IE9iamVjdC5jcmVhdGUocHJvdG9HZW5lcmF0b3IucHJvdG90eXBlKTtcbiAgICB2YXIgY29udGV4dCA9IG5ldyBDb250ZXh0KHRyeUxvY3NMaXN0IHx8IFtdKTtcblxuICAgIC8vIFRoZSAuX2ludm9rZSBtZXRob2QgdW5pZmllcyB0aGUgaW1wbGVtZW50YXRpb25zIG9mIHRoZSAubmV4dCxcbiAgICAvLyAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMuXG4gICAgZ2VuZXJhdG9yLl9pbnZva2UgPSBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuXG4gICAgcmV0dXJuIGdlbmVyYXRvcjtcbiAgfVxuICBydW50aW1lLndyYXAgPSB3cmFwO1xuXG4gIC8vIFRyeS9jYXRjaCBoZWxwZXIgdG8gbWluaW1pemUgZGVvcHRpbWl6YXRpb25zLiBSZXR1cm5zIGEgY29tcGxldGlvblxuICAvLyByZWNvcmQgbGlrZSBjb250ZXh0LnRyeUVudHJpZXNbaV0uY29tcGxldGlvbi4gVGhpcyBpbnRlcmZhY2UgY291bGRcbiAgLy8gaGF2ZSBiZWVuIChhbmQgd2FzIHByZXZpb3VzbHkpIGRlc2lnbmVkIHRvIHRha2UgYSBjbG9zdXJlIHRvIGJlXG4gIC8vIGludm9rZWQgd2l0aG91dCBhcmd1bWVudHMsIGJ1dCBpbiBhbGwgdGhlIGNhc2VzIHdlIGNhcmUgYWJvdXQgd2VcbiAgLy8gYWxyZWFkeSBoYXZlIGFuIGV4aXN0aW5nIG1ldGhvZCB3ZSB3YW50IHRvIGNhbGwsIHNvIHRoZXJlJ3Mgbm8gbmVlZFxuICAvLyB0byBjcmVhdGUgYSBuZXcgZnVuY3Rpb24gb2JqZWN0LiBXZSBjYW4gZXZlbiBnZXQgYXdheSB3aXRoIGFzc3VtaW5nXG4gIC8vIHRoZSBtZXRob2QgdGFrZXMgZXhhY3RseSBvbmUgYXJndW1lbnQsIHNpbmNlIHRoYXQgaGFwcGVucyB0byBiZSB0cnVlXG4gIC8vIGluIGV2ZXJ5IGNhc2UsIHNvIHdlIGRvbid0IGhhdmUgdG8gdG91Y2ggdGhlIGFyZ3VtZW50cyBvYmplY3QuIFRoZVxuICAvLyBvbmx5IGFkZGl0aW9uYWwgYWxsb2NhdGlvbiByZXF1aXJlZCBpcyB0aGUgY29tcGxldGlvbiByZWNvcmQsIHdoaWNoXG4gIC8vIGhhcyBhIHN0YWJsZSBzaGFwZSBhbmQgc28gaG9wZWZ1bGx5IHNob3VsZCBiZSBjaGVhcCB0byBhbGxvY2F0ZS5cbiAgZnVuY3Rpb24gdHJ5Q2F0Y2goZm4sIG9iaiwgYXJnKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwibm9ybWFsXCIsIGFyZzogZm4uY2FsbChvYmosIGFyZykgfTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwidGhyb3dcIiwgYXJnOiBlcnIgfTtcbiAgICB9XG4gIH1cblxuICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRTdGFydCA9IFwic3VzcGVuZGVkU3RhcnRcIjtcbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkWWllbGQgPSBcInN1c3BlbmRlZFlpZWxkXCI7XG4gIHZhciBHZW5TdGF0ZUV4ZWN1dGluZyA9IFwiZXhlY3V0aW5nXCI7XG4gIHZhciBHZW5TdGF0ZUNvbXBsZXRlZCA9IFwiY29tcGxldGVkXCI7XG5cbiAgLy8gUmV0dXJuaW5nIHRoaXMgb2JqZWN0IGZyb20gdGhlIGlubmVyRm4gaGFzIHRoZSBzYW1lIGVmZmVjdCBhc1xuICAvLyBicmVha2luZyBvdXQgb2YgdGhlIGRpc3BhdGNoIHN3aXRjaCBzdGF0ZW1lbnQuXG4gIHZhciBDb250aW51ZVNlbnRpbmVsID0ge307XG5cbiAgLy8gRHVtbXkgY29uc3RydWN0b3IgZnVuY3Rpb25zIHRoYXQgd2UgdXNlIGFzIHRoZSAuY29uc3RydWN0b3IgYW5kXG4gIC8vIC5jb25zdHJ1Y3Rvci5wcm90b3R5cGUgcHJvcGVydGllcyBmb3IgZnVuY3Rpb25zIHRoYXQgcmV0dXJuIEdlbmVyYXRvclxuICAvLyBvYmplY3RzLiBGb3IgZnVsbCBzcGVjIGNvbXBsaWFuY2UsIHlvdSBtYXkgd2lzaCB0byBjb25maWd1cmUgeW91clxuICAvLyBtaW5pZmllciBub3QgdG8gbWFuZ2xlIHRoZSBuYW1lcyBvZiB0aGVzZSB0d28gZnVuY3Rpb25zLlxuICBmdW5jdGlvbiBHZW5lcmF0b3IoKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvbigpIHt9XG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKCkge31cblxuICAvLyBUaGlzIGlzIGEgcG9seWZpbGwgZm9yICVJdGVyYXRvclByb3RvdHlwZSUgZm9yIGVudmlyb25tZW50cyB0aGF0XG4gIC8vIGRvbid0IG5hdGl2ZWx5IHN1cHBvcnQgaXQuXG4gIHZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuICBJdGVyYXRvclByb3RvdHlwZVtpdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgdmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuICB2YXIgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90byAmJiBnZXRQcm90byhnZXRQcm90byh2YWx1ZXMoW10pKSk7XG4gIGlmIChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAmJlxuICAgICAgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgIT09IE9wICYmXG4gICAgICBoYXNPd24uY2FsbChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wpKSB7XG4gICAgLy8gVGhpcyBlbnZpcm9ubWVudCBoYXMgYSBuYXRpdmUgJUl0ZXJhdG9yUHJvdG90eXBlJTsgdXNlIGl0IGluc3RlYWRcbiAgICAvLyBvZiB0aGUgcG9seWZpbGwuXG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBOYXRpdmVJdGVyYXRvclByb3RvdHlwZTtcbiAgfVxuXG4gIHZhciBHcCA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLnByb3RvdHlwZSA9XG4gICAgR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUpO1xuICBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHcC5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZVt0b1N0cmluZ1RhZ1N5bWJvbF0gPVxuICAgIEdlbmVyYXRvckZ1bmN0aW9uLmRpc3BsYXlOYW1lID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuXG4gIC8vIEhlbHBlciBmb3IgZGVmaW5pbmcgdGhlIC5uZXh0LCAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMgb2YgdGhlXG4gIC8vIEl0ZXJhdG9yIGludGVyZmFjZSBpbiB0ZXJtcyBvZiBhIHNpbmdsZSAuX2ludm9rZSBtZXRob2QuXG4gIGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhwcm90b3R5cGUpIHtcbiAgICBbXCJuZXh0XCIsIFwidGhyb3dcIiwgXCJyZXR1cm5cIl0uZm9yRWFjaChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgIHByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIHJ1bnRpbWUuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIHZhciBjdG9yID0gdHlwZW9mIGdlbkZ1biA9PT0gXCJmdW5jdGlvblwiICYmIGdlbkZ1bi5jb25zdHJ1Y3RvcjtcbiAgICByZXR1cm4gY3RvclxuICAgICAgPyBjdG9yID09PSBHZW5lcmF0b3JGdW5jdGlvbiB8fFxuICAgICAgICAvLyBGb3IgdGhlIG5hdGl2ZSBHZW5lcmF0b3JGdW5jdGlvbiBjb25zdHJ1Y3RvciwgdGhlIGJlc3Qgd2UgY2FuXG4gICAgICAgIC8vIGRvIGlzIHRvIGNoZWNrIGl0cyAubmFtZSBwcm9wZXJ0eS5cbiAgICAgICAgKGN0b3IuZGlzcGxheU5hbWUgfHwgY3Rvci5uYW1lKSA9PT0gXCJHZW5lcmF0b3JGdW5jdGlvblwiXG4gICAgICA6IGZhbHNlO1xuICB9O1xuXG4gIHJ1bnRpbWUubWFyayA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIGlmIChPYmplY3Quc2V0UHJvdG90eXBlT2YpIHtcbiAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihnZW5GdW4sIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ2VuRnVuLl9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICAgICAgaWYgKCEodG9TdHJpbmdUYWdTeW1ib2wgaW4gZ2VuRnVuKSkge1xuICAgICAgICBnZW5GdW5bdG9TdHJpbmdUYWdTeW1ib2xdID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuICAgICAgfVxuICAgIH1cbiAgICBnZW5GdW4ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShHcCk7XG4gICAgcmV0dXJuIGdlbkZ1bjtcbiAgfTtcblxuICAvLyBXaXRoaW4gdGhlIGJvZHkgb2YgYW55IGFzeW5jIGZ1bmN0aW9uLCBgYXdhaXQgeGAgaXMgdHJhbnNmb3JtZWQgdG9cbiAgLy8gYHlpZWxkIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh4KWAsIHNvIHRoYXQgdGhlIHJ1bnRpbWUgY2FuIHRlc3RcbiAgLy8gYGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIilgIHRvIGRldGVybWluZSBpZiB0aGUgeWllbGRlZCB2YWx1ZSBpc1xuICAvLyBtZWFudCB0byBiZSBhd2FpdGVkLlxuICBydW50aW1lLmF3cmFwID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHsgX19hd2FpdDogYXJnIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gQXN5bmNJdGVyYXRvcihnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGdlbmVyYXRvclttZXRob2RdLCBnZW5lcmF0b3IsIGFyZyk7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICByZWplY3QocmVjb3JkLmFyZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVjb3JkLmFyZztcbiAgICAgICAgdmFyIHZhbHVlID0gcmVzdWx0LnZhbHVlO1xuICAgICAgICBpZiAodmFsdWUgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKSkge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUuX19hd2FpdCkudGhlbihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgaW52b2tlKFwibmV4dFwiLCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGludm9rZShcInRocm93XCIsIGVyciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oZnVuY3Rpb24odW53cmFwcGVkKSB7XG4gICAgICAgICAgLy8gV2hlbiBhIHlpZWxkZWQgUHJvbWlzZSBpcyByZXNvbHZlZCwgaXRzIGZpbmFsIHZhbHVlIGJlY29tZXNcbiAgICAgICAgICAvLyB0aGUgLnZhbHVlIG9mIHRoZSBQcm9taXNlPHt2YWx1ZSxkb25lfT4gcmVzdWx0IGZvciB0aGVcbiAgICAgICAgICAvLyBjdXJyZW50IGl0ZXJhdGlvbi4gSWYgdGhlIFByb21pc2UgaXMgcmVqZWN0ZWQsIGhvd2V2ZXIsIHRoZVxuICAgICAgICAgIC8vIHJlc3VsdCBmb3IgdGhpcyBpdGVyYXRpb24gd2lsbCBiZSByZWplY3RlZCB3aXRoIHRoZSBzYW1lXG4gICAgICAgICAgLy8gcmVhc29uLiBOb3RlIHRoYXQgcmVqZWN0aW9ucyBvZiB5aWVsZGVkIFByb21pc2VzIGFyZSBub3RcbiAgICAgICAgICAvLyB0aHJvd24gYmFjayBpbnRvIHRoZSBnZW5lcmF0b3IgZnVuY3Rpb24sIGFzIGlzIHRoZSBjYXNlXG4gICAgICAgICAgLy8gd2hlbiBhbiBhd2FpdGVkIFByb21pc2UgaXMgcmVqZWN0ZWQuIFRoaXMgZGlmZmVyZW5jZSBpblxuICAgICAgICAgIC8vIGJlaGF2aW9yIGJldHdlZW4geWllbGQgYW5kIGF3YWl0IGlzIGltcG9ydGFudCwgYmVjYXVzZSBpdFxuICAgICAgICAgIC8vIGFsbG93cyB0aGUgY29uc3VtZXIgdG8gZGVjaWRlIHdoYXQgdG8gZG8gd2l0aCB0aGUgeWllbGRlZFxuICAgICAgICAgIC8vIHJlamVjdGlvbiAoc3dhbGxvdyBpdCBhbmQgY29udGludWUsIG1hbnVhbGx5IC50aHJvdyBpdCBiYWNrXG4gICAgICAgICAgLy8gaW50byB0aGUgZ2VuZXJhdG9yLCBhYmFuZG9uIGl0ZXJhdGlvbiwgd2hhdGV2ZXIpLiBXaXRoXG4gICAgICAgICAgLy8gYXdhaXQsIGJ5IGNvbnRyYXN0LCB0aGVyZSBpcyBubyBvcHBvcnR1bml0eSB0byBleGFtaW5lIHRoZVxuICAgICAgICAgIC8vIHJlamVjdGlvbiByZWFzb24gb3V0c2lkZSB0aGUgZ2VuZXJhdG9yIGZ1bmN0aW9uLCBzbyB0aGVcbiAgICAgICAgICAvLyBvbmx5IG9wdGlvbiBpcyB0byB0aHJvdyBpdCBmcm9tIHRoZSBhd2FpdCBleHByZXNzaW9uLCBhbmRcbiAgICAgICAgICAvLyBsZXQgdGhlIGdlbmVyYXRvciBmdW5jdGlvbiBoYW5kbGUgdGhlIGV4Y2VwdGlvbi5cbiAgICAgICAgICByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQ7XG4gICAgICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBwcmV2aW91c1Byb21pc2U7XG5cbiAgICBmdW5jdGlvbiBlbnF1ZXVlKG1ldGhvZCwgYXJnKSB7XG4gICAgICBmdW5jdGlvbiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgIGludm9rZShtZXRob2QsIGFyZywgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwcmV2aW91c1Byb21pc2UgPVxuICAgICAgICAvLyBJZiBlbnF1ZXVlIGhhcyBiZWVuIGNhbGxlZCBiZWZvcmUsIHRoZW4gd2Ugd2FudCB0byB3YWl0IHVudGlsXG4gICAgICAgIC8vIGFsbCBwcmV2aW91cyBQcm9taXNlcyBoYXZlIGJlZW4gcmVzb2x2ZWQgYmVmb3JlIGNhbGxpbmcgaW52b2tlLFxuICAgICAgICAvLyBzbyB0aGF0IHJlc3VsdHMgYXJlIGFsd2F5cyBkZWxpdmVyZWQgaW4gdGhlIGNvcnJlY3Qgb3JkZXIuIElmXG4gICAgICAgIC8vIGVucXVldWUgaGFzIG5vdCBiZWVuIGNhbGxlZCBiZWZvcmUsIHRoZW4gaXQgaXMgaW1wb3J0YW50IHRvXG4gICAgICAgIC8vIGNhbGwgaW52b2tlIGltbWVkaWF0ZWx5LCB3aXRob3V0IHdhaXRpbmcgb24gYSBjYWxsYmFjayB0byBmaXJlLFxuICAgICAgICAvLyBzbyB0aGF0IHRoZSBhc3luYyBnZW5lcmF0b3IgZnVuY3Rpb24gaGFzIHRoZSBvcHBvcnR1bml0eSB0byBkb1xuICAgICAgICAvLyBhbnkgbmVjZXNzYXJ5IHNldHVwIGluIGEgcHJlZGljdGFibGUgd2F5LiBUaGlzIHByZWRpY3RhYmlsaXR5XG4gICAgICAgIC8vIGlzIHdoeSB0aGUgUHJvbWlzZSBjb25zdHJ1Y3RvciBzeW5jaHJvbm91c2x5IGludm9rZXMgaXRzXG4gICAgICAgIC8vIGV4ZWN1dG9yIGNhbGxiYWNrLCBhbmQgd2h5IGFzeW5jIGZ1bmN0aW9ucyBzeW5jaHJvbm91c2x5XG4gICAgICAgIC8vIGV4ZWN1dGUgY29kZSBiZWZvcmUgdGhlIGZpcnN0IGF3YWl0LiBTaW5jZSB3ZSBpbXBsZW1lbnQgc2ltcGxlXG4gICAgICAgIC8vIGFzeW5jIGZ1bmN0aW9ucyBpbiB0ZXJtcyBvZiBhc3luYyBnZW5lcmF0b3JzLCBpdCBpcyBlc3BlY2lhbGx5XG4gICAgICAgIC8vIGltcG9ydGFudCB0byBnZXQgdGhpcyByaWdodCwgZXZlbiB0aG91Z2ggaXQgcmVxdWlyZXMgY2FyZS5cbiAgICAgICAgcHJldmlvdXNQcm9taXNlID8gcHJldmlvdXNQcm9taXNlLnRoZW4oXG4gICAgICAgICAgY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcsXG4gICAgICAgICAgLy8gQXZvaWQgcHJvcGFnYXRpbmcgZmFpbHVyZXMgdG8gUHJvbWlzZXMgcmV0dXJuZWQgYnkgbGF0ZXJcbiAgICAgICAgICAvLyBpbnZvY2F0aW9ucyBvZiB0aGUgaXRlcmF0b3IuXG4gICAgICAgICAgY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmdcbiAgICAgICAgKSA6IGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCk7XG4gICAgfVxuXG4gICAgLy8gRGVmaW5lIHRoZSB1bmlmaWVkIGhlbHBlciBtZXRob2QgdGhhdCBpcyB1c2VkIHRvIGltcGxlbWVudCAubmV4dCxcbiAgICAvLyAudGhyb3csIGFuZCAucmV0dXJuIChzZWUgZGVmaW5lSXRlcmF0b3JNZXRob2RzKS5cbiAgICB0aGlzLl9pbnZva2UgPSBlbnF1ZXVlO1xuICB9XG5cbiAgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEFzeW5jSXRlcmF0b3IucHJvdG90eXBlKTtcbiAgQXN5bmNJdGVyYXRvci5wcm90b3R5cGVbYXN5bmNJdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG4gIHJ1bnRpbWUuQXN5bmNJdGVyYXRvciA9IEFzeW5jSXRlcmF0b3I7XG5cbiAgLy8gTm90ZSB0aGF0IHNpbXBsZSBhc3luYyBmdW5jdGlvbnMgYXJlIGltcGxlbWVudGVkIG9uIHRvcCBvZlxuICAvLyBBc3luY0l0ZXJhdG9yIG9iamVjdHM7IHRoZXkganVzdCByZXR1cm4gYSBQcm9taXNlIGZvciB0aGUgdmFsdWUgb2ZcbiAgLy8gdGhlIGZpbmFsIHJlc3VsdCBwcm9kdWNlZCBieSB0aGUgaXRlcmF0b3IuXG4gIHJ1bnRpbWUuYXN5bmMgPSBmdW5jdGlvbihpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIHZhciBpdGVyID0gbmV3IEFzeW5jSXRlcmF0b3IoXG4gICAgICB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KVxuICAgICk7XG5cbiAgICByZXR1cm4gcnVudGltZS5pc0dlbmVyYXRvckZ1bmN0aW9uKG91dGVyRm4pXG4gICAgICA/IGl0ZXIgLy8gSWYgb3V0ZXJGbiBpcyBhIGdlbmVyYXRvciwgcmV0dXJuIHRoZSBmdWxsIGl0ZXJhdG9yLlxuICAgICAgOiBpdGVyLm5leHQoKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICAgIHJldHVybiByZXN1bHQuZG9uZSA/IHJlc3VsdC52YWx1ZSA6IGl0ZXIubmV4dCgpO1xuICAgICAgICB9KTtcbiAgfTtcblxuICBmdW5jdGlvbiBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpIHtcbiAgICB2YXIgc3RhdGUgPSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGludm9rZShtZXRob2QsIGFyZykge1xuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUV4ZWN1dGluZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nXCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlQ29tcGxldGVkKSB7XG4gICAgICAgIGlmIChtZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIHRocm93IGFyZztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEJlIGZvcmdpdmluZywgcGVyIDI1LjMuMy4zLjMgb2YgdGhlIHNwZWM6XG4gICAgICAgIC8vIGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy1nZW5lcmF0b3JyZXN1bWVcbiAgICAgICAgcmV0dXJuIGRvbmVSZXN1bHQoKTtcbiAgICAgIH1cblxuICAgICAgY29udGV4dC5tZXRob2QgPSBtZXRob2Q7XG4gICAgICBjb250ZXh0LmFyZyA9IGFyZztcblxuICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgdmFyIGRlbGVnYXRlID0gY29udGV4dC5kZWxlZ2F0ZTtcbiAgICAgICAgaWYgKGRlbGVnYXRlKSB7XG4gICAgICAgICAgdmFyIGRlbGVnYXRlUmVzdWx0ID0gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCk7XG4gICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQgPT09IENvbnRpbnVlU2VudGluZWwpIGNvbnRpbnVlO1xuICAgICAgICAgICAgcmV0dXJuIGRlbGVnYXRlUmVzdWx0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgICAvLyBTZXR0aW5nIGNvbnRleHQuX3NlbnQgZm9yIGxlZ2FjeSBzdXBwb3J0IG9mIEJhYmVsJ3NcbiAgICAgICAgICAvLyBmdW5jdGlvbi5zZW50IGltcGxlbWVudGF0aW9uLlxuICAgICAgICAgIGNvbnRleHQuc2VudCA9IGNvbnRleHQuX3NlbnQgPSBjb250ZXh0LmFyZztcblxuICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlU3VzcGVuZGVkU3RhcnQpIHtcbiAgICAgICAgICAgIHN0YXRlID0gR2VuU3RhdGVDb21wbGV0ZWQ7XG4gICAgICAgICAgICB0aHJvdyBjb250ZXh0LmFyZztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKTtcblxuICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInJldHVyblwiKSB7XG4gICAgICAgICAgY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgY29udGV4dC5hcmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUV4ZWN1dGluZztcblxuICAgICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goaW5uZXJGbiwgc2VsZiwgY29udGV4dCk7XG4gICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJub3JtYWxcIikge1xuICAgICAgICAgIC8vIElmIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24gZnJvbSBpbm5lckZuLCB3ZSBsZWF2ZSBzdGF0ZSA9PT1cbiAgICAgICAgICAvLyBHZW5TdGF0ZUV4ZWN1dGluZyBhbmQgbG9vcCBiYWNrIGZvciBhbm90aGVyIGludm9jYXRpb24uXG4gICAgICAgICAgc3RhdGUgPSBjb250ZXh0LmRvbmVcbiAgICAgICAgICAgID8gR2VuU3RhdGVDb21wbGV0ZWRcbiAgICAgICAgICAgIDogR2VuU3RhdGVTdXNwZW5kZWRZaWVsZDtcblxuICAgICAgICAgIGlmIChyZWNvcmQuYXJnID09PSBDb250aW51ZVNlbnRpbmVsKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWU6IHJlY29yZC5hcmcsXG4gICAgICAgICAgICBkb25lOiBjb250ZXh0LmRvbmVcbiAgICAgICAgICB9O1xuXG4gICAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIHN0YXRlID0gR2VuU3RhdGVDb21wbGV0ZWQ7XG4gICAgICAgICAgLy8gRGlzcGF0Y2ggdGhlIGV4Y2VwdGlvbiBieSBsb29waW5nIGJhY2sgYXJvdW5kIHRvIHRoZVxuICAgICAgICAgIC8vIGNvbnRleHQuZGlzcGF0Y2hFeGNlcHRpb24oY29udGV4dC5hcmcpIGNhbGwgYWJvdmUuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIC8vIENhbGwgZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdKGNvbnRleHQuYXJnKSBhbmQgaGFuZGxlIHRoZVxuICAvLyByZXN1bHQsIGVpdGhlciBieSByZXR1cm5pbmcgYSB7IHZhbHVlLCBkb25lIH0gcmVzdWx0IGZyb20gdGhlXG4gIC8vIGRlbGVnYXRlIGl0ZXJhdG9yLCBvciBieSBtb2RpZnlpbmcgY29udGV4dC5tZXRob2QgYW5kIGNvbnRleHQuYXJnLFxuICAvLyBzZXR0aW5nIGNvbnRleHQuZGVsZWdhdGUgdG8gbnVsbCwgYW5kIHJldHVybmluZyB0aGUgQ29udGludWVTZW50aW5lbC5cbiAgZnVuY3Rpb24gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCkge1xuICAgIHZhciBtZXRob2QgPSBkZWxlZ2F0ZS5pdGVyYXRvcltjb250ZXh0Lm1ldGhvZF07XG4gICAgaWYgKG1ldGhvZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBBIC50aHJvdyBvciAucmV0dXJuIHdoZW4gdGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGhhcyBubyAudGhyb3dcbiAgICAgIC8vIG1ldGhvZCBhbHdheXMgdGVybWluYXRlcyB0aGUgeWllbGQqIGxvb3AuXG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgaWYgKGRlbGVnYXRlLml0ZXJhdG9yLnJldHVybikge1xuICAgICAgICAgIC8vIElmIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgYSByZXR1cm4gbWV0aG9kLCBnaXZlIGl0IGFcbiAgICAgICAgICAvLyBjaGFuY2UgdG8gY2xlYW4gdXAuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInJldHVyblwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICAgIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuXG4gICAgICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICAgIC8vIElmIG1heWJlSW52b2tlRGVsZWdhdGUoY29udGV4dCkgY2hhbmdlZCBjb250ZXh0Lm1ldGhvZCBmcm9tXG4gICAgICAgICAgICAvLyBcInJldHVyblwiIHRvIFwidGhyb3dcIiwgbGV0IHRoYXQgb3ZlcnJpZGUgdGhlIFR5cGVFcnJvciBiZWxvdy5cbiAgICAgICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXG4gICAgICAgICAgXCJUaGUgaXRlcmF0b3IgZG9lcyBub3QgcHJvdmlkZSBhICd0aHJvdycgbWV0aG9kXCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2gobWV0aG9kLCBkZWxlZ2F0ZS5pdGVyYXRvciwgY29udGV4dC5hcmcpO1xuXG4gICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICB2YXIgaW5mbyA9IHJlY29yZC5hcmc7XG5cbiAgICBpZiAoISBpbmZvKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gbmV3IFR5cGVFcnJvcihcIml0ZXJhdG9yIHJlc3VsdCBpcyBub3QgYW4gb2JqZWN0XCIpO1xuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG5cbiAgICBpZiAoaW5mby5kb25lKSB7XG4gICAgICAvLyBBc3NpZ24gdGhlIHJlc3VsdCBvZiB0aGUgZmluaXNoZWQgZGVsZWdhdGUgdG8gdGhlIHRlbXBvcmFyeVxuICAgICAgLy8gdmFyaWFibGUgc3BlY2lmaWVkIGJ5IGRlbGVnYXRlLnJlc3VsdE5hbWUgKHNlZSBkZWxlZ2F0ZVlpZWxkKS5cbiAgICAgIGNvbnRleHRbZGVsZWdhdGUucmVzdWx0TmFtZV0gPSBpbmZvLnZhbHVlO1xuXG4gICAgICAvLyBSZXN1bWUgZXhlY3V0aW9uIGF0IHRoZSBkZXNpcmVkIGxvY2F0aW9uIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0Lm5leHQgPSBkZWxlZ2F0ZS5uZXh0TG9jO1xuXG4gICAgICAvLyBJZiBjb250ZXh0Lm1ldGhvZCB3YXMgXCJ0aHJvd1wiIGJ1dCB0aGUgZGVsZWdhdGUgaGFuZGxlZCB0aGVcbiAgICAgIC8vIGV4Y2VwdGlvbiwgbGV0IHRoZSBvdXRlciBnZW5lcmF0b3IgcHJvY2VlZCBub3JtYWxseS4gSWZcbiAgICAgIC8vIGNvbnRleHQubWV0aG9kIHdhcyBcIm5leHRcIiwgZm9yZ2V0IGNvbnRleHQuYXJnIHNpbmNlIGl0IGhhcyBiZWVuXG4gICAgICAvLyBcImNvbnN1bWVkXCIgYnkgdGhlIGRlbGVnYXRlIGl0ZXJhdG9yLiBJZiBjb250ZXh0Lm1ldGhvZCB3YXNcbiAgICAgIC8vIFwicmV0dXJuXCIsIGFsbG93IHRoZSBvcmlnaW5hbCAucmV0dXJuIGNhbGwgdG8gY29udGludWUgaW4gdGhlXG4gICAgICAvLyBvdXRlciBnZW5lcmF0b3IuXG4gICAgICBpZiAoY29udGV4dC5tZXRob2QgIT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgY29udGV4dC5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUmUteWllbGQgdGhlIHJlc3VsdCByZXR1cm5lZCBieSB0aGUgZGVsZWdhdGUgbWV0aG9kLlxuICAgICAgcmV0dXJuIGluZm87XG4gICAgfVxuXG4gICAgLy8gVGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGlzIGZpbmlzaGVkLCBzbyBmb3JnZXQgaXQgYW5kIGNvbnRpbnVlIHdpdGhcbiAgICAvLyB0aGUgb3V0ZXIgZ2VuZXJhdG9yLlxuICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICB9XG5cbiAgLy8gRGVmaW5lIEdlbmVyYXRvci5wcm90b3R5cGUue25leHQsdGhyb3cscmV0dXJufSBpbiB0ZXJtcyBvZiB0aGVcbiAgLy8gdW5pZmllZCAuX2ludm9rZSBoZWxwZXIgbWV0aG9kLlxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoR3ApO1xuXG4gIEdwW3RvU3RyaW5nVGFnU3ltYm9sXSA9IFwiR2VuZXJhdG9yXCI7XG5cbiAgLy8gQSBHZW5lcmF0b3Igc2hvdWxkIGFsd2F5cyByZXR1cm4gaXRzZWxmIGFzIHRoZSBpdGVyYXRvciBvYmplY3Qgd2hlbiB0aGVcbiAgLy8gQEBpdGVyYXRvciBmdW5jdGlvbiBpcyBjYWxsZWQgb24gaXQuIFNvbWUgYnJvd3NlcnMnIGltcGxlbWVudGF0aW9ucyBvZiB0aGVcbiAgLy8gaXRlcmF0b3IgcHJvdG90eXBlIGNoYWluIGluY29ycmVjdGx5IGltcGxlbWVudCB0aGlzLCBjYXVzaW5nIHRoZSBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0IHRvIG5vdCBiZSByZXR1cm5lZCBmcm9tIHRoaXMgY2FsbC4gVGhpcyBlbnN1cmVzIHRoYXQgZG9lc24ndCBoYXBwZW4uXG4gIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvaXNzdWVzLzI3NCBmb3IgbW9yZSBkZXRhaWxzLlxuICBHcFtpdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBHcC50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBcIltvYmplY3QgR2VuZXJhdG9yXVwiO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHB1c2hUcnlFbnRyeShsb2NzKSB7XG4gICAgdmFyIGVudHJ5ID0geyB0cnlMb2M6IGxvY3NbMF0gfTtcblxuICAgIGlmICgxIGluIGxvY3MpIHtcbiAgICAgIGVudHJ5LmNhdGNoTG9jID0gbG9jc1sxXTtcbiAgICB9XG5cbiAgICBpZiAoMiBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5maW5hbGx5TG9jID0gbG9jc1syXTtcbiAgICAgIGVudHJ5LmFmdGVyTG9jID0gbG9jc1szXTtcbiAgICB9XG5cbiAgICB0aGlzLnRyeUVudHJpZXMucHVzaChlbnRyeSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXNldFRyeUVudHJ5KGVudHJ5KSB7XG4gICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb24gfHwge307XG4gICAgcmVjb3JkLnR5cGUgPSBcIm5vcm1hbFwiO1xuICAgIGRlbGV0ZSByZWNvcmQuYXJnO1xuICAgIGVudHJ5LmNvbXBsZXRpb24gPSByZWNvcmQ7XG4gIH1cblxuICBmdW5jdGlvbiBDb250ZXh0KHRyeUxvY3NMaXN0KSB7XG4gICAgLy8gVGhlIHJvb3QgZW50cnkgb2JqZWN0IChlZmZlY3RpdmVseSBhIHRyeSBzdGF0ZW1lbnQgd2l0aG91dCBhIGNhdGNoXG4gICAgLy8gb3IgYSBmaW5hbGx5IGJsb2NrKSBnaXZlcyB1cyBhIHBsYWNlIHRvIHN0b3JlIHZhbHVlcyB0aHJvd24gZnJvbVxuICAgIC8vIGxvY2F0aW9ucyB3aGVyZSB0aGVyZSBpcyBubyBlbmNsb3NpbmcgdHJ5IHN0YXRlbWVudC5cbiAgICB0aGlzLnRyeUVudHJpZXMgPSBbeyB0cnlMb2M6IFwicm9vdFwiIH1dO1xuICAgIHRyeUxvY3NMaXN0LmZvckVhY2gocHVzaFRyeUVudHJ5LCB0aGlzKTtcbiAgICB0aGlzLnJlc2V0KHRydWUpO1xuICB9XG5cbiAgcnVudGltZS5rZXlzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgdmFyIGtleXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICBrZXlzLnB1c2goa2V5KTtcbiAgICB9XG4gICAga2V5cy5yZXZlcnNlKCk7XG5cbiAgICAvLyBSYXRoZXIgdGhhbiByZXR1cm5pbmcgYW4gb2JqZWN0IHdpdGggYSBuZXh0IG1ldGhvZCwgd2Uga2VlcFxuICAgIC8vIHRoaW5ncyBzaW1wbGUgYW5kIHJldHVybiB0aGUgbmV4dCBmdW5jdGlvbiBpdHNlbGYuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICB3aGlsZSAoa2V5cy5sZW5ndGgpIHtcbiAgICAgICAgdmFyIGtleSA9IGtleXMucG9wKCk7XG4gICAgICAgIGlmIChrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgbmV4dC52YWx1ZSA9IGtleTtcbiAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBUbyBhdm9pZCBjcmVhdGluZyBhbiBhZGRpdGlvbmFsIG9iamVjdCwgd2UganVzdCBoYW5nIHRoZSAudmFsdWVcbiAgICAgIC8vIGFuZCAuZG9uZSBwcm9wZXJ0aWVzIG9mZiB0aGUgbmV4dCBmdW5jdGlvbiBvYmplY3QgaXRzZWxmLiBUaGlzXG4gICAgICAvLyBhbHNvIGVuc3VyZXMgdGhhdCB0aGUgbWluaWZpZXIgd2lsbCBub3QgYW5vbnltaXplIHRoZSBmdW5jdGlvbi5cbiAgICAgIG5leHQuZG9uZSA9IHRydWU7XG4gICAgICByZXR1cm4gbmV4dDtcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIHZhbHVlcyhpdGVyYWJsZSkge1xuICAgIGlmIChpdGVyYWJsZSkge1xuICAgICAgdmFyIGl0ZXJhdG9yTWV0aG9kID0gaXRlcmFibGVbaXRlcmF0b3JTeW1ib2xdO1xuICAgICAgaWYgKGl0ZXJhdG9yTWV0aG9kKSB7XG4gICAgICAgIHJldHVybiBpdGVyYXRvck1ldGhvZC5jYWxsKGl0ZXJhYmxlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBpdGVyYWJsZS5uZXh0ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhYmxlO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzTmFOKGl0ZXJhYmxlLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIGkgPSAtMSwgbmV4dCA9IGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICAgICAgd2hpbGUgKCsraSA8IGl0ZXJhYmxlLmxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKGhhc093bi5jYWxsKGl0ZXJhYmxlLCBpKSkge1xuICAgICAgICAgICAgICBuZXh0LnZhbHVlID0gaXRlcmFibGVbaV07XG4gICAgICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlO1xuICAgICAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBuZXh0LnZhbHVlID0gdW5kZWZpbmVkO1xuICAgICAgICAgIG5leHQuZG9uZSA9IHRydWU7XG5cbiAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gbmV4dC5uZXh0ID0gbmV4dDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gYW4gaXRlcmF0b3Igd2l0aCBubyB2YWx1ZXMuXG4gICAgcmV0dXJuIHsgbmV4dDogZG9uZVJlc3VsdCB9O1xuICB9XG4gIHJ1bnRpbWUudmFsdWVzID0gdmFsdWVzO1xuXG4gIGZ1bmN0aW9uIGRvbmVSZXN1bHQoKSB7XG4gICAgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICB9XG5cbiAgQ29udGV4dC5wcm90b3R5cGUgPSB7XG4gICAgY29uc3RydWN0b3I6IENvbnRleHQsXG5cbiAgICByZXNldDogZnVuY3Rpb24oc2tpcFRlbXBSZXNldCkge1xuICAgICAgdGhpcy5wcmV2ID0gMDtcbiAgICAgIHRoaXMubmV4dCA9IDA7XG4gICAgICAvLyBSZXNldHRpbmcgY29udGV4dC5fc2VudCBmb3IgbGVnYWN5IHN1cHBvcnQgb2YgQmFiZWwnc1xuICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgIHRoaXMuc2VudCA9IHRoaXMuX3NlbnQgPSB1bmRlZmluZWQ7XG4gICAgICB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICAgIHRoaXMuZGVsZWdhdGUgPSBudWxsO1xuXG4gICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgdGhpcy5hcmcgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRoaXMudHJ5RW50cmllcy5mb3JFYWNoKHJlc2V0VHJ5RW50cnkpO1xuXG4gICAgICBpZiAoIXNraXBUZW1wUmVzZXQpIHtcbiAgICAgICAgZm9yICh2YXIgbmFtZSBpbiB0aGlzKSB7XG4gICAgICAgICAgLy8gTm90IHN1cmUgYWJvdXQgdGhlIG9wdGltYWwgb3JkZXIgb2YgdGhlc2UgY29uZGl0aW9uczpcbiAgICAgICAgICBpZiAobmFtZS5jaGFyQXQoMCkgPT09IFwidFwiICYmXG4gICAgICAgICAgICAgIGhhc093bi5jYWxsKHRoaXMsIG5hbWUpICYmXG4gICAgICAgICAgICAgICFpc05hTigrbmFtZS5zbGljZSgxKSkpIHtcbiAgICAgICAgICAgIHRoaXNbbmFtZV0gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIHN0b3A6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5kb25lID0gdHJ1ZTtcblxuICAgICAgdmFyIHJvb3RFbnRyeSA9IHRoaXMudHJ5RW50cmllc1swXTtcbiAgICAgIHZhciByb290UmVjb3JkID0gcm9vdEVudHJ5LmNvbXBsZXRpb247XG4gICAgICBpZiAocm9vdFJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgdGhyb3cgcm9vdFJlY29yZC5hcmc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnJ2YWw7XG4gICAgfSxcblxuICAgIGRpc3BhdGNoRXhjZXB0aW9uOiBmdW5jdGlvbihleGNlcHRpb24pIHtcbiAgICAgIGlmICh0aGlzLmRvbmUpIHtcbiAgICAgICAgdGhyb3cgZXhjZXB0aW9uO1xuICAgICAgfVxuXG4gICAgICB2YXIgY29udGV4dCA9IHRoaXM7XG4gICAgICBmdW5jdGlvbiBoYW5kbGUobG9jLCBjYXVnaHQpIHtcbiAgICAgICAgcmVjb3JkLnR5cGUgPSBcInRocm93XCI7XG4gICAgICAgIHJlY29yZC5hcmcgPSBleGNlcHRpb247XG4gICAgICAgIGNvbnRleHQubmV4dCA9IGxvYztcblxuICAgICAgICBpZiAoY2F1Z2h0KSB7XG4gICAgICAgICAgLy8gSWYgdGhlIGRpc3BhdGNoZWQgZXhjZXB0aW9uIHdhcyBjYXVnaHQgYnkgYSBjYXRjaCBibG9jayxcbiAgICAgICAgICAvLyB0aGVuIGxldCB0aGF0IGNhdGNoIGJsb2NrIGhhbmRsZSB0aGUgZXhjZXB0aW9uIG5vcm1hbGx5LlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gISEgY2F1Z2h0O1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA9PT0gXCJyb290XCIpIHtcbiAgICAgICAgICAvLyBFeGNlcHRpb24gdGhyb3duIG91dHNpZGUgb2YgYW55IHRyeSBibG9jayB0aGF0IGNvdWxkIGhhbmRsZVxuICAgICAgICAgIC8vIGl0LCBzbyBzZXQgdGhlIGNvbXBsZXRpb24gdmFsdWUgb2YgdGhlIGVudGlyZSBmdW5jdGlvbiB0b1xuICAgICAgICAgIC8vIHRocm93IHRoZSBleGNlcHRpb24uXG4gICAgICAgICAgcmV0dXJuIGhhbmRsZShcImVuZFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2KSB7XG4gICAgICAgICAgdmFyIGhhc0NhdGNoID0gaGFzT3duLmNhbGwoZW50cnksIFwiY2F0Y2hMb2NcIik7XG4gICAgICAgICAgdmFyIGhhc0ZpbmFsbHkgPSBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpO1xuXG4gICAgICAgICAgaWYgKGhhc0NhdGNoICYmIGhhc0ZpbmFsbHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIGlmIChoYXNDYXRjaCkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsIHRydWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIGlmIChoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRyeSBzdGF0ZW1lbnQgd2l0aG91dCBjYXRjaCBvciBmaW5hbGx5XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBhYnJ1cHQ6IGZ1bmN0aW9uKHR5cGUsIGFyZykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2ICYmXG4gICAgICAgICAgICBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpICYmXG4gICAgICAgICAgICB0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgdmFyIGZpbmFsbHlFbnRyeSA9IGVudHJ5O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChmaW5hbGx5RW50cnkgJiZcbiAgICAgICAgICAodHlwZSA9PT0gXCJicmVha1wiIHx8XG4gICAgICAgICAgIHR5cGUgPT09IFwiY29udGludWVcIikgJiZcbiAgICAgICAgICBmaW5hbGx5RW50cnkudHJ5TG9jIDw9IGFyZyAmJlxuICAgICAgICAgIGFyZyA8PSBmaW5hbGx5RW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAvLyBJZ25vcmUgdGhlIGZpbmFsbHkgZW50cnkgaWYgY29udHJvbCBpcyBub3QganVtcGluZyB0byBhXG4gICAgICAgIC8vIGxvY2F0aW9uIG91dHNpZGUgdGhlIHRyeS9jYXRjaCBibG9jay5cbiAgICAgICAgZmluYWxseUVudHJ5ID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgdmFyIHJlY29yZCA9IGZpbmFsbHlFbnRyeSA/IGZpbmFsbHlFbnRyeS5jb21wbGV0aW9uIDoge307XG4gICAgICByZWNvcmQudHlwZSA9IHR5cGU7XG4gICAgICByZWNvcmQuYXJnID0gYXJnO1xuXG4gICAgICBpZiAoZmluYWxseUVudHJ5KSB7XG4gICAgICAgIHRoaXMubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgIHRoaXMubmV4dCA9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jO1xuICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuY29tcGxldGUocmVjb3JkKTtcbiAgICB9LFxuXG4gICAgY29tcGxldGU6IGZ1bmN0aW9uKHJlY29yZCwgYWZ0ZXJMb2MpIHtcbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJlY29yZC5hcmc7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJicmVha1wiIHx8XG4gICAgICAgICAgcmVjb3JkLnR5cGUgPT09IFwiY29udGludWVcIikge1xuICAgICAgICB0aGlzLm5leHQgPSByZWNvcmQuYXJnO1xuICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICB0aGlzLnJ2YWwgPSB0aGlzLmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICAgIHRoaXMubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgdGhpcy5uZXh0ID0gXCJlbmRcIjtcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIgJiYgYWZ0ZXJMb2MpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gYWZ0ZXJMb2M7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH0sXG5cbiAgICBmaW5pc2g6IGZ1bmN0aW9uKGZpbmFsbHlMb2MpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkuZmluYWxseUxvYyA9PT0gZmluYWxseUxvYykge1xuICAgICAgICAgIHRoaXMuY29tcGxldGUoZW50cnkuY29tcGxldGlvbiwgZW50cnkuYWZ0ZXJMb2MpO1xuICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIFwiY2F0Y2hcIjogZnVuY3Rpb24odHJ5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA9PT0gdHJ5TG9jKSB7XG4gICAgICAgICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG4gICAgICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICAgIHZhciB0aHJvd24gPSByZWNvcmQuYXJnO1xuICAgICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB0aHJvd247XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVGhlIGNvbnRleHQuY2F0Y2ggbWV0aG9kIG11c3Qgb25seSBiZSBjYWxsZWQgd2l0aCBhIGxvY2F0aW9uXG4gICAgICAvLyBhcmd1bWVudCB0aGF0IGNvcnJlc3BvbmRzIHRvIGEga25vd24gY2F0Y2ggYmxvY2suXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbGxlZ2FsIGNhdGNoIGF0dGVtcHRcIik7XG4gICAgfSxcblxuICAgIGRlbGVnYXRlWWllbGQ6IGZ1bmN0aW9uKGl0ZXJhYmxlLCByZXN1bHROYW1lLCBuZXh0TG9jKSB7XG4gICAgICB0aGlzLmRlbGVnYXRlID0ge1xuICAgICAgICBpdGVyYXRvcjogdmFsdWVzKGl0ZXJhYmxlKSxcbiAgICAgICAgcmVzdWx0TmFtZTogcmVzdWx0TmFtZSxcbiAgICAgICAgbmV4dExvYzogbmV4dExvY1xuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMubWV0aG9kID09PSBcIm5leHRcIikge1xuICAgICAgICAvLyBEZWxpYmVyYXRlbHkgZm9yZ2V0IHRoZSBsYXN0IHNlbnQgdmFsdWUgc28gdGhhdCB3ZSBkb24ndFxuICAgICAgICAvLyBhY2NpZGVudGFsbHkgcGFzcyBpdCBvbiB0byB0aGUgZGVsZWdhdGUuXG4gICAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG4gIH07XG59KShcbiAgLy8gSW4gc2xvcHB5IG1vZGUsIHVuYm91bmQgYHRoaXNgIHJlZmVycyB0byB0aGUgZ2xvYmFsIG9iamVjdCwgZmFsbGJhY2sgdG9cbiAgLy8gRnVuY3Rpb24gY29uc3RydWN0b3IgaWYgd2UncmUgaW4gZ2xvYmFsIHN0cmljdCBtb2RlLiBUaGF0IGlzIHNhZGx5IGEgZm9ybVxuICAvLyBvZiBpbmRpcmVjdCBldmFsIHdoaWNoIHZpb2xhdGVzIENvbnRlbnQgU2VjdXJpdHkgUG9saWN5LlxuICAoZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzIH0pKCkgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpXG4pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qc1xuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n')}]);